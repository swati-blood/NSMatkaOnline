Index: app/src/main/java/in/games/rosegame/Common/Common.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package in.games.rosegame.Common;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.net.Uri;\r\nimport android.os.CountDownTimer;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.Window;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ListView;\r\nimport android.widget.RadioButton;\r\nimport android.widget.TableLayout;\r\nimport android.widget.TableRow;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.NetworkError;\r\nimport com.android.volley.NoConnectionError;\r\nimport com.android.volley.ParseError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.RetryPolicy;\r\nimport com.android.volley.ServerError;\r\nimport com.android.volley.TimeoutError;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONObject;\r\n\r\nimport java.lang.reflect.Type;\r\nimport java.net.URLEncoder;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\nimport java.util.Random;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\nimport in.games.rosegame.Activity.LoginActivity;\r\nimport in.games.rosegame.Activity.MainActivity;\r\nimport in.games.rosegame.Activity.PanaActivity;\r\nimport in.games.rosegame.Adapter.ListItemAdapter;\r\nimport in.games.rosegame.Adapter.TableAdaper;\r\nimport in.games.rosegame.AppController;\r\nimport in.games.rosegame.Config.BaseUrls;\r\nimport in.games.rosegame.Config.Constants;\r\nimport in.games.rosegame.Intefaces.GetAppSettingData;\r\nimport in.games.rosegame.Intefaces.UpdateBidAmount;\r\nimport in.games.rosegame.Intefaces.UpdateTotalBidAmount;\r\nimport in.games.rosegame.Intefaces.VolleyCallBack;\r\nimport in.games.rosegame.Model.AppSettingModel;\r\nimport in.games.rosegame.Model.MatkasObjects;\r\nimport in.games.rosegame.Model.Starline_Objects;\r\nimport in.games.rosegame.Model.TableModel;\r\nimport in.games.rosegame.R;\r\nimport in.games.rosegame.Util.ConnectivityReceiver;\r\nimport in.games.rosegame.Util.CustomJsonRequest;\r\nimport in.games.rosegame.Util.CustomVolleyJsonArrayRequest;\r\nimport in.games.rosegame.Util.LoadingBar;\r\nimport in.games.rosegame.Util.Module;\r\nimport in.games.rosegame.Util.Session_management;\r\nimport in.games.rosegame.Util.ToastMsg;\r\n\r\nimport static in.games.rosegame.Config.BaseUrls.URL_INSERT_DATA;\r\nimport static in.games.rosegame.Config.BaseUrls.URL_MOBILE;\r\nimport static in.games.rosegame.Config.Constants.KEY_ID;\r\nimport static in.games.rosegame.Config.Constants.KEY_WALLET;\r\nimport static in.games.rosegame.Config.Constants.REV_BEFORE_VALUE;\r\nimport static in.games.rosegame.Config.Constants.REV_BET_TYPE;\r\nimport static in.games.rosegame.Config.Constants.REV_FRAG_POSITION;\r\nimport static in.games.rosegame.Config.Constants.REV_POINTS;\r\nimport static in.games.rosegame.Config.Constants.REV_POSITION;\r\nimport static in.games.rosegame.Config.Constants.REV_TYPE;\r\n\r\npublic class Common {\r\n    Context context;\r\n  Session_management session_management;\r\n  LoadingBar loadingBar;\r\n\r\n    public Common(Context context) {\r\n        this.context = context;\r\n        session_management=new Session_management(context);\r\n        loadingBar=new LoadingBar(context);\r\n    }\r\n\r\n    public void showToast(String s)\r\n    {\r\n        Toast.makeText(context,\"\"+s, Toast.LENGTH_SHORT).show();\r\n    }\r\n    public void setMobileNumber(final TextView txt)\r\n    {\r\n        String json_tag_request=\"json_mobile_request\";\r\n        HashMap<String, String> params=new HashMap<String, String>();\r\n        CustomJsonRequest customVolleyJsonArrayRequest=new CustomJsonRequest(Request.Method.GET, URL_MOBILE, params, new Response.Listener<JSONObject>() {\r\n            @Override\r\n            public void onResponse(JSONObject response) {\r\n\r\n                try\r\n                {\r\n                    JSONObject object=response;\r\n                    String mobile=object.getString(\"mobile\");\r\n                    int m_cnt= Integer.parseInt(object.getString(\"count\"));\r\n                    txt.setText(mobile);\r\n                    Constants.Matka_count=m_cnt;\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    Toast.makeText(context,\"\"+ex.getMessage(), Toast.LENGTH_LONG).show();\r\n                }\r\n\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                String msg=VolleyErrorMessage(error);\r\n                errorMessageDialog(msg);\r\n\r\n            }\r\n        });\r\n\r\n        AppController.getInstance().addToRequestQueue(customVolleyJsonArrayRequest,json_tag_request);\r\n    }\r\n\r\n    public String VolleyErrorMessage(VolleyError error) {\r\n        String str_error = \"\";\r\n        if (error instanceof TimeoutError) {\r\n            str_error = \"Connection Timeout\";\r\n        } else if (error instanceof AuthFailureError) {\r\n            str_error = \"Session Timeout\";\r\n            //TODO\r\n        } else if (error instanceof ServerError) {\r\n            str_error = \"Server not responding please try again later\";\r\n            //TODO\r\n        } else if (error instanceof NetworkError) {\r\n            str_error = \"No Internet Connection\";\r\n            //TODO\r\n        } else if (error instanceof ParseError) {\r\n            //TODO\r\n            str_error = \"An Unknown error occur\";\r\n        } else if (error instanceof NoConnectionError) {\r\n            str_error = \"No Internet Connection\";\r\n        } else {\r\n            str_error = \"Something Went Wrong\";\r\n        }\r\n\r\n        return str_error;\r\n    }\r\n    public void showVolleyError(VolleyError error)\r\n    {\r\n        String msg=VolleyErrorMessage(error);\r\n        if(!msg.isEmpty())\r\n        {\r\n            showToast(\"\"+msg);\r\n        }\r\n    }\r\n\r\n    public void errorMessageDialog(String message)\r\n    {\r\n\r\n        final Dialog dialog=new Dialog(context);\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.setContentView(R.layout.dialog_error_message_dialog);\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(0));\r\n        TextView txtMessage=(TextView)dialog.findViewById(R.id.txtmessage);\r\n        Button btnOk=(Button)dialog.findViewById(R.id.btnOK);\r\n        dialog.setCanceledOnTouchOutside(false);\r\n        if(dialog.isShowing())\r\n        {\r\n            dialog.dismiss();\r\n        }\r\n        dialog.show();\r\n\r\n        txtMessage.setText(message);\r\n\r\n        btnOk.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    //Function for net Connectivity.......\r\n\r\n    public boolean isConnected()\r\n    {\r\n        ConnectivityManager cm=(ConnectivityManager)context.getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        NetworkInfo netInfo=cm.getActiveNetworkInfo();\r\n\r\n        if(netInfo != null && netInfo.isConnectedOrConnecting())\r\n        {\r\n            NetworkInfo wifi=cm.getNetworkInfo(ConnectivityManager.TYPE_WIFI);\r\n            NetworkInfo mobileNet=cm.getNetworkInfo(ConnectivityManager.TYPE_MOBILE);\r\n\r\n            if((mobileNet != null && mobileNet.isConnectedOrConnecting()) || (wifi != null && wifi.isConnectedOrConnecting()))\r\n            {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n\r\n        }\r\n        else\r\n        {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public long getTimeDifference(String time) {\r\n        long diff_e_s=0;\r\n        Date date = new Date();\r\n        SimpleDateFormat parseFormat = new SimpleDateFormat(\"HH:mm:ss\");\r\n        String cur_time = parseFormat.format(date);\r\n        try {\r\n            final Date s_time = parseFormat.parse(cur_time.trim());\r\n            Date e_time = parseFormat.parse(time.trim());\r\n            diff_e_s = e_time.getTime() - s_time.getTime();\r\n        } catch (Exception ex) {\r\n            ex.printStackTrace();\r\n        }\r\n        return diff_e_s;\r\n    }\r\n\r\n    public void setBetTypeTooText(Dialog dialog, final TextView txt_timer, RadioButton txtOpen, RadioButton txtClose, String m_id, final Button btnType, LoadingBar progressDialog, final String c_date, final TextView tv_timer)\r\n    {\r\n        dialog=new Dialog(context);\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.setContentView(R.layout.layout_bettype);\r\n        dialog.setCanceledOnTouchOutside(false);\r\n        dialog.show();\r\n\r\n       txtOpen=dialog.findViewById(R.id.rd_open);\r\n        txtClose=dialog.findViewById(R.id.rd_close);\r\n\r\n//        setDataTo(txtOpen,txtClose,m_id,progressDialog,c_date);\r\n\r\n        final Dialog finalDialog = dialog;\r\n        final TextView finalTxtOpen = txtOpen;\r\n        final  boolean is_open =true;\r\n        final  boolean is_close =true;\r\n//      true  txtOpen.setOnCheckedChangeListener();\r\n        txtOpen.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                btnType.setText(finalTxtOpen.getText().toString());\r\n                txt_timer.setVisibility(View.VISIBLE);\r\n                tv_timer.setVisibility(View.GONE);\r\n                finalDialog.dismiss();\r\n\r\n            }\r\n        });\r\n\r\n        final TextView finalTxtClose = txtClose;\r\n        final Dialog finalDialog1 = dialog;\r\n        txtClose.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                btnType.setText(finalTxtClose.getText().toString());\r\n                tv_timer.setVisibility(View.VISIBLE);\r\n                txt_timer.setVisibility(View.GONE);\r\n                finalDialog1.dismiss();\r\n            }\r\n        });\r\n    }\r\n//    public void setBetTypeDialog(Dialog dialog, TextView txtOpen, TextView txtClose, String m_id, final TextView btnType, LoadingBar progressDialog, final String c_date)\r\n//    {\r\n//        dialog=new Dialog(context);\r\n//        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n//        dialog.setContentView(R.layout.layout_bettype);\r\n//        dialog.setCanceledOnTouchOutside(false);\r\n//        dialog.show();\r\n//        txtOpen=dialog.findViewById(R.id.rd_open);\r\n//        txtClose=dialog.findViewById(R.id.rd_close);\r\n//        final Dialog finalDialog = dialog;\r\n//        final TextView finalTxtOpen = txtOpen;\r\n//        final  boolean is_open =true;\r\n//        final  boolean is_close =true;\r\n//        txtOpen.setOnClickListener(new View.OnClickListener() {\r\n//            @Override\r\n//            public void onClick(View v) {\r\n//                btnType.setText(finalTxtOpen.getText().toString());\r\n//                btnType.setTextColor(context.getResources().getColor(R.color.black));\r\n//                  finalDialog.dismiss();\r\n//\r\n//            }\r\n//        });\r\n//\r\n//        final TextView finalTxtClose = txtClose;\r\n//        final Dialog finalDialog1 = dialog;\r\n//        txtClose.setOnClickListener(new View.OnClickListener() {\r\n//            @Override\r\n//            public void onClick(View v) {\r\n//                btnType.setText(finalTxtClose.getText().toString());\r\n//                btnType.setTextColor(context.getResources().getColor(R.color.black));\r\n//                finalDialog1.dismiss();\r\n//            }\r\n//        });\r\n//    }\r\n\r\n    public String getBetType(String gdate,String strt_time,String end_time)\r\n    {\r\n        String bet=\"\";\r\n        Date date=new Date();\r\n        SimpleDateFormat simpleDateFormat=new SimpleDateFormat(\"dd/MM/yyyy\");\r\n        String cDate=simpleDateFormat.format(date);\r\n        String g_d = gdate.substring(0, 10);\r\n        if(cDate.equals(g_d))\r\n        {\r\n            long sDiff=getTimeDifference(strt_time);\r\n            long eDiff=getTimeDifference(end_time);\r\n            if(sDiff>=0 && eDiff>=0)\r\n            {\r\n                bet=\"both open\";\r\n            }\r\n            else if(sDiff<0 && eDiff<0)\r\n            {\r\n                bet=\"both close\";\r\n            }\r\n            else\r\n            {\r\n                if(sDiff>=0)\r\n                {\r\n                    bet=\"open\";\r\n                }\r\n                else if(eDiff>=0)\r\n                {\r\n                    bet=\"close\";\r\n                }\r\n                else\r\n                {\r\n                    bet=\"both close\";\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        else\r\n        {\r\n            bet=\"both open\";\r\n        }\r\n        Log.e(\"asdsadasd\",\"\"+bet);\r\n        return bet;\r\n    }\r\n    public void setBetTypeDialog(Dialog dialog, TextView txtOpen, TextView txtClose, final TextView btnType,String gameDate,String stime,String eTime)\r\n    {\r\n        if(gameDate.equalsIgnoreCase(\"Select Date\"))\r\n        {\r\n          showToast(\"Select Date\");\r\n        }\r\n        else {\r\n            String betType = getBetType(gameDate, stime, eTime);\r\n            if (betType.equalsIgnoreCase(\"both close\")) {\r\n                errorMessageDialog(\"BID IS CLOSED FOR TODAY\");\r\n            } else {\r\n                dialog = new Dialog(context);\r\n                dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n                dialog.setContentView(R.layout.layout_bettype);\r\n                dialog.setCanceledOnTouchOutside(false);\r\n                dialog.show();\r\n                txtOpen = dialog.findViewById(R.id.rd_open);\r\n                txtClose = dialog.findViewById(R.id.rd_close);\r\n                final Dialog finalDialog = dialog;\r\n                final TextView finalTxtOpen = txtOpen;\r\n                if (betType.equalsIgnoreCase(\"open\") || betType.equalsIgnoreCase(\"both open\")) {\r\n                    if (txtOpen.getVisibility() == View.GONE) {\r\n                        txtOpen.setVisibility(View.VISIBLE);\r\n                    }\r\n                } else {\r\n                    if (txtOpen.getVisibility() == View.VISIBLE) {\r\n                        txtOpen.setVisibility(View.GONE);\r\n                    }\r\n                }\r\n\r\n                if (betType.equalsIgnoreCase(\"close\") || betType.equalsIgnoreCase(\"both open\")) {\r\n                    if (txtClose.getVisibility() == View.GONE) {\r\n                        txtClose.setVisibility(View.VISIBLE);\r\n                    }\r\n                } else {\r\n                    if (txtClose.getVisibility() == View.VISIBLE) {\r\n                        txtClose.setVisibility(View.GONE);\r\n                    }\r\n                }\r\n                txtOpen.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        btnType.setText(finalTxtOpen.getText().toString());\r\n                        btnType.setTextColor(context.getResources().getColor(R.color.black));\r\n                        finalDialog.dismiss();\r\n\r\n                    }\r\n                });\r\n\r\n                final TextView finalTxtClose = txtClose;\r\n                final Dialog finalDialog1 = dialog;\r\n                txtClose.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        btnType.setText(finalTxtClose.getText().toString());\r\n                        btnType.setTextColor(context.getResources().getColor(R.color.black));\r\n                        finalDialog1.dismiss();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    public void addData(String digit, String point, String type, List<TableModel> list, TableAdaper tableAdaper, ListView list_table, Button btnSave) {\r\n\r\n        list.add(new TableModel(digit, point, type));\r\n        tableAdaper = new TableAdaper(list, context, btnSave);\r\n        list_table.setAdapter(tableAdaper);\r\n        tableAdaper.notifyDataSetChanged();\r\n        int we = list.size();\r\n        int points = Integer.parseInt(point);\r\n        int tot_pnt = Integer.parseInt(getSumOfPoints(list));\r\n\r\n        btnSave.setText(\"(BIDS=\" + we + \")(Points=\" + tot_pnt + \")\");\r\n    }\r\n\r\n    public String getSumOfPoints(List<TableModel> list) {\r\n        int sum = 0;\r\n        for (int i = 0; i < list.size(); i++) {\r\n            sum = sum + Integer.parseInt(list.get(i).getPoints());\r\n        }\r\n\r\n        return String.valueOf(sum);\r\n    }\r\n\r\n    public void setBidsDialog(int wallet_amount , final List<TableModel> list, final String m_id, final String c, final String game_id, final String w, final String dashName, final LoadingBar progressDialog, final Button btnSave, final String start_time, final String end_time)\r\n    {\r\n        TableRow tr1;\r\n        ListItemAdapter listItemAdapter = new ListItemAdapter(list,context);\r\n        TextView txtD1,txtP1,txtT1;\r\n\r\n        final Dialog dialog=new Dialog(context);\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.setContentView(R.layout.starline_save_layout);\r\n        if(dialog.isShowing())\r\n        {\r\n            dialog.dismiss();\r\n        }\r\n        dialog.show();\r\n        final TableLayout tableLayout=(TableLayout)dialog.findViewById(R.id.tblLayout1);\r\n        ListView listView = dialog.findViewById(R.id.list_item);\r\n        Button btn_dialog_add=(Button)dialog.findViewById(R.id.btnOk);\r\n        TextView btnDialogCancel=(Button)dialog.findViewById(R.id.btnCancel);\r\n        TextView txtCountBids=(TextView)dialog.findViewById(R.id.txtCountBids);\r\n        TextView txtAmount=(TextView)dialog.findViewById(R.id.txtAmount);\r\n        TextView txtBeforeAmount=(TextView)dialog.findViewById(R.id.txtBeforeAmount);\r\n        TextView txtAfterAmount=(TextView)dialog.findViewById(R.id.txtAfterAmount);\r\n        TextView matka_name = dialog.findViewById( R.id.matka_name );\r\n        matka_name.setText( dashName );\r\n\r\n        listView.setAdapter(listItemAdapter);\r\n\r\n        int amt=0;\r\n        for(int j=0;j<list.size();j++)\r\n        {\r\n            amt=amt+Integer.parseInt(list.get(j).getPoints());\r\n        }\r\n\r\n        int bid_count=list.size();\r\n        txtCountBids.setText(String.valueOf(String.valueOf(bid_count)));\r\n        txtAmount.setText(String.valueOf(amt));\r\n        int w_a=wallet_amount;\r\n        int after_amt=w_a-amt;\r\n        txtBeforeAmount.setText(String.valueOf(w_a));\r\n        txtAfterAmount.setText(String.valueOf(after_amt));\r\n        btn_dialog_add.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                insertData(list,m_id,c,game_id,w,dashName,progressDialog,btnSave,start_time,end_time);\r\n\r\n            }\r\n        });\r\n\r\n        btnDialogCancel.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                dialog.dismiss();\r\n//                list.clear();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public void insertData(List<TableModel> list, String m_id, String c, String game_id, String w, String dashName, LoadingBar progressDialog, Button btnSave, final String start_time, final String end_time) {\r\n        int er = list.size();\r\n        if (er <= 0) {\r\n            String message = \"Please Add Some Bids\";\r\n            errorMessageDialog(message);\r\n            return;\r\n        } else {\r\n            try {\r\n                int amt = 0;\r\n                ArrayList list_digits = new ArrayList();\r\n                ArrayList list_type = new ArrayList();\r\n                ArrayList list_points = new ArrayList();\r\n                int rows = list.size();\r\n\r\n                for (int i = 0; i < rows; i++) {\r\n\r\n\r\n                    TableModel tableModel = list.get(i);\r\n\r\n                    String asd = tableModel.getDigits().toString();\r\n                    String asd1 = tableModel.getPoints().toString();\r\n                    String asd2 = tableModel.getType().toString();\r\n                    int b = 9;\r\n\r\n                    if (asd2.equalsIgnoreCase(\"Close\")) {\r\n                        b = 1;\r\n                    } else if (asd2.equalsIgnoreCase(\"Open\")) {\r\n                        b = 0;\r\n                    }\r\n\r\n\r\n                    amt = amt + Integer.parseInt(asd1);\r\n\r\n                    char quotes = '\"';\r\n                    list_digits.add(quotes + asd + quotes);\r\n                    list_points.add(asd1);\r\n                    list_type.add(b);\r\n\r\n          }\r\n\r\n\r\n                String id = session_management.getUserDetails().get(KEY_ID).toString().trim();\r\n                String matka_id = m_id.toString().trim();\r\n                JSONObject jsonObject = new JSONObject();\r\n                jsonObject.put(\"points\", list_points);\r\n                jsonObject.put(\"digits\", list_digits);\r\n                jsonObject.put(\"bettype\", list_type);\r\n                jsonObject.put(\"user_id\", id);\r\n                jsonObject.put(\"matka_id\", matka_id);\r\n                jsonObject.put(\"game_date\", c);\r\n                jsonObject.put(\"game_id\", game_id);\r\n\r\n                JSONArray jsonArray = new JSONArray();\r\n                jsonArray.put(jsonObject);\r\n\r\n                int wallet_amount = Integer.parseInt(w);\r\n                if (wallet_amount < amt) {\r\n                    String message = \"Insufficient Amount\";\r\n                    errorMessageDialog(message);\r\n                    return;\r\n\r\n                } else {\r\n                    btnSave.setEnabled(false);\r\n                    int sWallet=Integer.parseInt(session_management.getUserDetails().get(KEY_WALLET));\r\n                    int rem=sWallet-amt;\r\n                    session_management.updateWallet(String.valueOf(rem));\r\n                    if(context.toString().contains(\"MainActivity\"))\r\n                    {\r\n                        ((MainActivity)context).setWallet_Amount(String.valueOf(rem));\r\n\r\n                    }\r\n                    else\r\n                    {\r\n                        ((PanaActivity)context).setWalletCounter(String.valueOf(rem));\r\n                    }\r\n                    updateWalletAmount(jsonArray, progressDialog, dashName, m_id,start_time,end_time);\r\n\r\n                }\r\n            } catch (Exception ex) {\r\n             new ToastMsg(context).toastIconError( \"Err\" + ex.getMessage());\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public void setDateDialog(Dialog dialog, final String m_id, TextView txtCurrentDate, TextView txtNextDate, TextView txtAfterNextDate, TextView txtDate_id, final TextView btnGameType ,LoadingBar loadingBar)\r\n    {\r\n        dialog=new Dialog(context);\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.setContentView(R.layout.layout_date_bet);\r\n        txtCurrentDate=(TextView)dialog.findViewById(R.id.currentDate);\r\n        txtNextDate=(TextView)dialog.findViewById(R.id.nextDate);\r\n        txtAfterNextDate=(TextView)dialog.findViewById(R.id.afterNextDate);\r\n        txtDate_id=(TextView)dialog.findViewById(R.id.date_id);\r\n\r\n        txtDate_id.setVisibility(View.GONE);\r\n        dialog.setCanceledOnTouchOutside(false);\r\n\r\n        //setData(txtCurrentDate,txtNextDate,txtAfterNextDate,txtDate_id,m_id,progressDialog,OddEvenActivity.this);\r\n        dialog.show();\r\n        //getMatkaDateData(context,m_id,txtCurrentDate,txtNextDate,txtAfterNextDate,progressDialog);\r\n        getDateData(m_id,txtCurrentDate,txtNextDate,txtAfterNextDate,loadingBar);\r\n\r\n\r\n        final Dialog finalDialog = dialog;\r\n        final TextView finalTxtCurrentDate = txtCurrentDate;\r\n        txtCurrentDate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                String c= finalTxtCurrentDate.getText().toString();\r\n\r\n                ///   String as=getDataString(c);\r\n                btnGameType.setText(c.toString());\r\n                btnGameType.setTextColor(context.getResources().getColor(R.color.black));\r\n                finalDialog.dismiss();\r\n            }\r\n        });\r\n\r\n        final Dialog finalDialog1 = dialog;\r\n        final TextView finalTxtNextDate = txtNextDate;\r\n        txtNextDate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n\r\n                String c= finalTxtNextDate.getText().toString();\r\n\r\n                // String as=getDataString(c);\r\n                btnGameType.setText(c.toString());\r\n                btnGameType.setTextColor(context.getResources().getColor(R.color.black));\r\n                finalDialog1.dismiss();\r\n            }\r\n        });\r\n\r\n        final Dialog finalDialog2 = dialog;\r\n        final TextView finalTxtAfterNextDate = txtAfterNextDate;\r\n        txtAfterNextDate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n\r\n                String c= finalTxtAfterNextDate.getText().toString();\r\n\r\n                // String as=getDataString(c);\r\n                btnGameType.setText(c.toString());\r\n                btnGameType.setTextColor(context.getResources().getColor(R.color.black));\r\n                finalDialog2.dismiss();\r\n            }\r\n        });\r\n    }\r\n\r\n    // Function for Get Game Date and Day\r\n\r\n    public void getDateData(final String m_id, final TextView txtCurrentDate, final TextView txtNextDate, final TextView txtAfterNextDate , final LoadingBar loadingBar)\r\n    {\r\n        loadingBar.show();\r\n        String json_tag=\"json_matka_id\";\r\n        HashMap<String, String> params=new HashMap<String, String>();\r\n        params.put(\"id\",m_id);\r\n\r\n        postRequest(BaseUrls.URL_MATKA_WITH_ID, params, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                try {\r\n                    if (loadingBar.isShowing())\r\n                    {\r\n                        loadingBar.dismiss();\r\n                    }\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n                    String status = jsonObject.getString(\"status\");\r\n                    if (status.equals(\"success\")) {\r\n                        JSONObject object = jsonObject.getJSONObject(\"data\");\r\n                        MatkasObjects matkasObjects = new MatkasObjects();\r\n                        matkasObjects.setId(object.getString(\"id\"));\r\n                        matkasObjects.setName(object.getString(\"name\"));\r\n                        matkasObjects.setStart_time(object.getString(\"start_time\"));\r\n                        matkasObjects.setEnd_time(object.getString(\"end_time\"));\r\n                        matkasObjects.setStarting_num(object.getString(\"starting_num\"));\r\n                        matkasObjects.setNumber(object.getString(\"number\"));\r\n                        matkasObjects.setEnd_num(object.getString(\"end_num\"));\r\n                        matkasObjects.setBid_start_time(object.getString(\"bid_start_time\"));\r\n                        matkasObjects.setBid_end_time(object.getString(\"bid_end_time\"));\r\n                        matkasObjects.setSat_start_time(object.getString(\"sat_start_time\"));\r\n                        matkasObjects.setSat_end_time(object.getString(\"sat_end_time\"));\r\n                        matkasObjects.setCreated_at(object.getString(\"created_at\"));\r\n                        matkasObjects.setUpdated_at(object.getString(\"updated_at\"));\r\n                        matkasObjects.setStatus(object.getString(\"status\"));\r\n\r\n                        String bid_start = \"\";\r\n                        String bid_end = \"\";\r\n                        String dt = new SimpleDateFormat(\"EEEE\").format(new Date());\r\n\r\n                        String st_time = \"\";\r\n                        String st_time1 = \"\";\r\n                        String st_time2 = \"\";\r\n\r\n                        if (dt.equals(\"Saturday\")) {\r\n                            st_time = matkasObjects.getSat_start_time();\r\n                        } else if (dt.equals(\"Sunday\")) {\r\n                            st_time = matkasObjects.getStart_time();\r\n                        } else {\r\n                            st_time = matkasObjects.getBid_start_time();\r\n                        }\r\n\r\n                        String dt1 = getNextDay(dt);\r\n                        if (dt1.equals(\"Saturday\")) {\r\n                            st_time1 = matkasObjects.getSat_start_time();\r\n                        } else if (dt1.equals(\"Sunday\")) {\r\n                            st_time1 = matkasObjects.getStart_time();\r\n                        } else {\r\n                            st_time1 = matkasObjects.getBid_start_time();\r\n                        }\r\n\r\n                        String dt2 = getNextDay(dt1);\r\n                        if (dt2.equals(\"Saturday\")) {\r\n                            st_time2 = matkasObjects.getSat_start_time();\r\n                        } else if (dt2.equals(\"Sunday\")) {\r\n                            st_time2 = matkasObjects.getStart_time();\r\n                        } else {\r\n                            st_time2 = matkasObjects.getBid_start_time();\r\n                        }\r\n\r\n\r\n                        String nd=\"\";\r\n                        String and=\"\";\r\n                        String cd=\"\";\r\n\r\n\r\n                        if (st_time.equals(\"\") && st_time.equals(\"null\")) {\r\n\r\n//                            txtCurrentDate.setText(dt + \" Bet Close\");\r\n                            txtCurrentDate.setText(\"\\n\"+dt );\r\n                            cd=\"c\";\r\n\r\n                            if (st_time1.equals(\"\") && st_time1.equals(\"null\")) {\r\n//                                txtNextDate.setText(dt1 + \" Bet Close\");\r\n                                txtNextDate.setText(\"\\n\"+dt1);\r\n                                nd=\"c\";\r\n                            } else {\r\n//                                txtNextDate.setText(dt1 + \" Bet Open\");\r\n                                txtNextDate.setText(\"\\n\"+dt1);\r\n                                nd=\"o\";\r\n                            }\r\n                            if (st_time2.equals(\"\") && st_time2.equals(\"null\")) {\r\n//                                txtAfterNextDate.setText(dt2 + \" Bet Close\");\r\n                                txtAfterNextDate.setText(\"\\n\"+dt2);\r\n                                and=\"c\";\r\n                            } else {\r\n//                                txtAfterNextDate.setText(dt2 + \" Bet Open\");\r\n                                txtAfterNextDate.setText(\"\\n\"+dt2);\r\n                                and=\"o\";\r\n                            }\r\n\r\n\r\n                            //  Toast.makeText(context,\"Somtehin\",Toast.LENGTH_LONG).show();\r\n                        } else {\r\n//                                Toast.makeText(context,\"\"+matkasObjects.getSat_start_time(),Toast.LENGTH_LONG).show();\r\n\r\n                            bid_start = st_time;\r\n                            bid_end = matkasObjects.getBid_end_time().toString();\r\n\r\n                            String time1 = bid_start.toString();\r\n                            String time2 = bid_end.toString();\r\n\r\n                            Date cdate = new Date();\r\n\r\n\r\n                            SimpleDateFormat format = new SimpleDateFormat(\"HH:mm:ss\");\r\n                            String time3 = format.format(cdate);\r\n                            Date date1 = null;\r\n                            Date date2 = null;\r\n                            Date date3 = null;\r\n                            try {\r\n                                date1 = format.parse(time1);\r\n                                date2 = format.parse(time2);\r\n                                date3 = format.parse(time3);\r\n                            } catch (ParseException e1) {\r\n                                e1.printStackTrace();\r\n                            }\r\n\r\n                            long difference = date3.getTime() - date1.getTime();\r\n                            long as = (difference / 1000) / 60;\r\n\r\n                            long diff_close = date3.getTime() - date2.getTime();\r\n                            long c = (diff_close / 1000) / 60;\r\n\r\n                            Date c_dat = new Date();\r\n                            SimpleDateFormat dateFormat2 = new SimpleDateFormat(\"dd/MM/yyyy EEEE\");\r\n                            String s_dt = dateFormat2.format(c_dat);\r\n                            String n_dt = getNextDate(s_dt);\r\n                            String a_dt = getNextDate(n_dt);\r\n                            if (as < 0) {\r\n//                                progressDialog.dismiss();\r\n                                //btn.setText(s_dt+\" Bet Open\");\r\n//                                txtCurrentDate.setText(s_dt + \" Bet Open\");\r\n                                txtCurrentDate.setText(s_dt);\r\n\r\n                                //Toast.makeText(OddEvenActivity.this,\"\"+s_dt+\"  Open\",Toast.LENGTH_LONG).show();\r\n                            } else if (c > 0) {\r\n//                                progressDialog.dismiss();\r\n//                                txtCurrentDate.setText(s_dt + \" Bet Close\");\r\n                                txtCurrentDate.setText(s_dt );\r\n\r\n                                // Toast.makeText(OddEvenActivity.this,\"\"+s_dt+\"  Close\",Toast.LENGTH_LONG).show();\r\n                            } else {\r\n//                                progressDialog.dismiss();\r\n                                //btn.setText(s_dt+\" Bet Open\");\r\n//                                txtCurrentDate.setText(s_dt + \" Bet Open\");\r\n                                txtCurrentDate.setText(s_dt );\r\n                            }\r\n\r\n                            if(nd.equals(\"c\"))\r\n                            {\r\n                                txtNextDate.setText(n_dt );\r\n\r\n                            }\r\n                            else\r\n                            {\r\n//                                txtNextDate.setText(n_dt + \" Bet Open\");\r\n                                txtNextDate.setText(n_dt);\r\n\r\n                            }\r\n\r\n                            if(and.equals(\"c\"))\r\n                            {\r\n                                txtAfterNextDate.setText(a_dt);\r\n//                                txtAfterNextDate.setText(a_dt + \" Bet Close\");\r\n\r\n                            }\r\n                            else\r\n                            {\r\n                                txtAfterNextDate.setText(a_dt);\r\n//                                txtAfterNextDate.setText(a_dt + \" Bet Open\");\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n\r\n                    }\r\n                } catch(Exception ex){\r\n                    if (loadingBar.isShowing())\r\n                    {\r\n                        loadingBar.dismiss();\r\n                    }\r\n//                    progressDialog.dismiss();\r\n                    Toast.makeText(context, \"Something went wrong\" + ex.getMessage(), Toast.LENGTH_LONG).show();\r\n\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                String msg=VolleyErrorMessage(error);\r\n                errorMessageDialog(msg);\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n    //Function for get Next Day\r\n    public String getNextDay(String currentDate)\r\n    {\r\n        String nextDate=\"\";\r\n\r\n        try\r\n        {\r\n            Calendar calendar= Calendar.getInstance();\r\n            SimpleDateFormat simpleDateFormat=new SimpleDateFormat(\"EEEE\");\r\n            Date c=simpleDateFormat.parse(currentDate);\r\n            calendar.setTime(c);\r\n            calendar.add(Calendar.DAY_OF_WEEK,1);\r\n            nextDate=simpleDateFormat.format(calendar.getTime());\r\n\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            ex.printStackTrace();\r\n            //Toast.makeText(OddEvenActivity.this,\"\"+ex.getMessage(),Toast.LENGTH_LONG).show();\r\n        }\r\n\r\n        return nextDate.toString();\r\n    }\r\n\r\n    // Function for get Next Date\r\n    public String getNextDate(String currentDate)\r\n    {\r\n        String nextDate=\"\";\r\n        try\r\n        {\r\n            Calendar calendar= Calendar.getInstance();\r\n            SimpleDateFormat simpleDateFormat=new SimpleDateFormat(\"dd/MM/yyyy EEEE\");\r\n            Date c=simpleDateFormat.parse(currentDate);\r\n            calendar.setTime(c);\r\n            calendar.add(Calendar.DAY_OF_WEEK,1);\r\n            nextDate=simpleDateFormat.format(calendar.getTime());\r\n\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            ex.printStackTrace();\r\n            //Toast.makeText(OddEvenActivity.this,\"\"+ex.getMessage(),Toast.LENGTH_LONG).show();\r\n        }\r\n\r\n        return nextDate.toString();\r\n    }\r\n\r\n    public void  setCounterTimer(long diff,final TextView txt_timer)\r\n    {\r\n        CountDownTimer countDownTimer = new CountDownTimer(diff, 1000) {\r\n            @Override\r\n            public void onTick(long millisUntilFinished) {\r\n                String text = String.format(Locale.getDefault(), \" %02d : %02d : %02d \",\r\n\r\n                        TimeUnit.MILLISECONDS.toHours(millisUntilFinished) % 60, TimeUnit.MILLISECONDS.toMinutes(millisUntilFinished) % 60,\r\n                        TimeUnit.MILLISECONDS.toSeconds(millisUntilFinished) % 60);\r\n                txt_timer.setText(text);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onFinish() {\r\n\r\n                txt_timer.setText(\"Bid Closed\");\r\n\r\n            }\r\n        }.start();\r\n\r\n    }\r\n\r\n    public void setEndCounterTimer(long diff,final TextView txt_timer)\r\n    {\r\n        CountDownTimer countDownTimer = new CountDownTimer(diff, 1000) {\r\n            @Override\r\n            public void onTick(long millisUntilFinished) {\r\n                String text = String.format(Locale.getDefault(), \" %02d : %02d : %02d \",\r\n\r\n                        TimeUnit.MILLISECONDS.toHours(millisUntilFinished) % 60, TimeUnit.MILLISECONDS.toMinutes(millisUntilFinished) % 60,\r\n                        TimeUnit.MILLISECONDS.toSeconds(millisUntilFinished) % 60);\r\n\r\n                txt_timer.setText(text);\r\n            }\r\n            @Override\r\n            public void onFinish() {\r\n                txt_timer.setText(\"Bid Closed\");\r\n            }\r\n        }.start();\r\n\r\n    }\r\n\r\n\r\n\r\n    public void getStarlineGameData(final String m_id, final Button btnType, final LoadingBar progressDialog)\r\n    {\r\n        progressDialog.show();\r\n\r\n        String json_tag=\"json_starline\";\r\n        HashMap<String, String> params=new HashMap<>();\r\n        params.put(\"id\",m_id);\r\n\r\n        CustomJsonRequest customJsonRequest=new CustomJsonRequest(Request.Method.POST, BaseUrls.URL_StarLine_id, params, new Response.Listener<JSONObject>() {\r\n            @Override\r\n            public void onResponse(JSONObject response) {\r\n\r\n                try\r\n                {\r\n                    JSONObject jsonObject=response;\r\n                    Starline_Objects matkasObjects=new Starline_Objects();\r\n                    matkasObjects.setId(jsonObject.getString(\"id\"));\r\n                    matkasObjects.setS_game_time(jsonObject.getString(\"s_game_time\"));\r\n                    matkasObjects.setS_game_number(jsonObject.getString(\"s_game_number\"));\r\n\r\n                    progressDialog.dismiss();\r\n                    btnType.setText(matkasObjects.getS_game_time());\r\n\r\n                }\r\n                catch(Exception ex)\r\n                {\r\n                    progressDialog.dismiss();\r\n                    Toast.makeText(context,\"Something \"+ex.getMessage(), Toast.LENGTH_LONG).show();\r\n\r\n                }\r\n\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n\r\n                progressDialog.dismiss();\r\n                String msg=VolleyErrorMessage(error);\r\n                errorMessageDialog(msg);\r\n            }\r\n        });\r\n        AppController.getInstance().addToRequestQueue(customJsonRequest,json_tag);\r\n\r\n\r\n\r\n    }\r\n\r\n    //Funtion for getDateDataTo\r\n    public void setDateAndBetTpeTo(Dialog dialog, final String m_id, TextView txtCurrentDate, TextView txtNextDate, TextView txtAfterNextDate, TextView txtDate_id, final Button btnGameType, LoadingBar progressDialog)\r\n    {\r\n        dialog=new Dialog(context);\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.setContentView(R.layout.layout_date_bet);\r\n\r\n\r\n        txtCurrentDate=(TextView)dialog.findViewById(R.id.currentDate);\r\n        txtNextDate=(TextView)dialog.findViewById(R.id.nextDate);\r\n        txtAfterNextDate=(TextView)dialog.findViewById(R.id.afterNextDate);\r\n        txtDate_id=(TextView)dialog.findViewById(R.id.date_id);\r\n\r\n        txtDate_id.setVisibility(View.GONE);\r\n        dialog.setCanceledOnTouchOutside(false);\r\n\r\n        //setData(txtCurrentDate,txtNextDate,txtAfterNextDate,txtDate_id,m_id,progressDialog,OddEvenActivity.this);\r\n        dialog.show();\r\n        getDateDataTo(m_id,txtCurrentDate,txtNextDate,txtAfterNextDate,progressDialog);\r\n\r\n\r\n        final Dialog finalDialog = dialog;\r\n        final TextView finalTxtCurrentDate = txtCurrentDate;\r\n        txtCurrentDate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                String c= finalTxtCurrentDate.getText().toString();\r\n\r\n                ///   String as=getDataString(c);\r\n                btnGameType.setText(c.toString());\r\n                finalDialog.dismiss();\r\n            }\r\n        });\r\n\r\n        final Dialog finalDialog1 = dialog;\r\n        final TextView finalTxtNextDate = txtNextDate;\r\n        txtNextDate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n\r\n                String c= finalTxtNextDate.getText().toString();\r\n\r\n                // String as=getDataString(c);\r\n                btnGameType.setText(c.toString());\r\n                finalDialog1.dismiss();\r\n            }\r\n        });\r\n\r\n        final Dialog finalDialog2 = dialog;\r\n        final TextView finalTxtAfterNextDate = txtAfterNextDate;\r\n        txtAfterNextDate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n\r\n                String c= finalTxtAfterNextDate.getText().toString();\r\n\r\n                // String as=getDataString(c);\r\n                btnGameType.setText(c.toString());\r\n                finalDialog2.dismiss();\r\n            }\r\n        });\r\n    }\r\n    //Function for button btnGametype in RedBracket\r\n\r\n    public void getDateDataTo(final String m_id, final TextView txtCurrentDate, final TextView txtNextDate, final TextView txtAfterNextDate, final LoadingBar progressDialog)\r\n    {\r\n\r\n        progressDialog.show();\r\n\r\n        String json_tag=\"json_getDtat\";\r\n        HashMap<String, String> params=new HashMap<>();\r\n        params.put(\"id\",m_id);\r\n\r\n        CustomJsonRequest customJsonRequest=new CustomJsonRequest(Request.Method.POST, BaseUrls.URL_MATKA_WITH_ID, params, new Response.Listener<JSONObject>() {\r\n            @Override\r\n            public void onResponse(JSONObject response) {\r\n                try {\r\n                    JSONObject jsonObject = response;\r\n                    String status = jsonObject.getString(\"status\");\r\n                    if (status.equals(\"success\")) {\r\n                        JSONObject object = jsonObject.getJSONObject(\"data\");\r\n                        MatkasObjects matkasObjects = new MatkasObjects();\r\n                        matkasObjects.setId(object.getString(\"id\"));\r\n                        matkasObjects.setName(object.getString(\"name\"));\r\n                        matkasObjects.setStart_time(object.getString(\"start_time\"));\r\n                        matkasObjects.setStarting_num(object.getString(\"starting_num\"));\r\n                        matkasObjects.setNumber(object.getString(\"number\"));\r\n                        matkasObjects.setEnd_num(object.getString(\"end_num\"));\r\n                        matkasObjects.setBid_start_time(object.getString(\"bid_start_time\"));\r\n                        matkasObjects.setBid_end_time(object.getString(\"bid_end_time\"));\r\n                        matkasObjects.setCreated_at(object.getString(\"created_at\"));\r\n                        matkasObjects.setUpdated_at(object.getString(\"updated_at\"));\r\n                        matkasObjects.setStatus(object.getString(\"status\"));\r\n\r\n                        String bid_start = matkasObjects.getBid_start_time();\r\n                        String bid_end=matkasObjects.getBid_end_time().toString();\r\n\r\n                        String time1 = bid_start.toString();\r\n                        String time2 = bid_end.toString();\r\n\r\n                        Date cdate=new Date();\r\n\r\n\r\n\r\n                        SimpleDateFormat format = new SimpleDateFormat(\"HH:mm:ss\");\r\n                        String time3=format.format(cdate);\r\n                        Date date1 = null;\r\n                        Date date2=null;\r\n                        Date date3=null;\r\n                        try {\r\n                            date1 = format.parse(time1);\r\n                            date2 = format.parse(time2);\r\n                            date3=format.parse(time3);\r\n                        } catch (ParseException e1) {\r\n                            e1.printStackTrace();\r\n                        }\r\n\r\n                        long difference = date3.getTime() - date1.getTime();\r\n                        long as=(difference/1000)/60;\r\n\r\n                        long diff_close=date3.getTime()-date2.getTime();\r\n                        long c=(diff_close/1000)/60;\r\n\r\n                        Date c_dat=new Date();\r\n                        SimpleDateFormat dateFormat=new SimpleDateFormat(\"dd/MM/yyyy EEEE\");\r\n                        String s_dt=dateFormat.format(c_dat);\r\n                        String n_dt= getNextDate(s_dt);\r\n                        String a_dt= getNextDate(n_dt);\r\n                        if(as<0)\r\n                        {\r\n                            progressDialog.dismiss();\r\n                            //btn.setText(s_dt+\" Bet Open\");\r\n                            txtCurrentDate.setText(s_dt+\" Bet Open\");\r\n                            txtNextDate.setText(n_dt+\" Bet Open\");\r\n                            txtAfterNextDate.setText(a_dt+\" Bet Open\");\r\n\r\n                            //Toast.makeText(OddEvenActivity.this,\"\"+s_dt+\"  Open\",Toast.LENGTH_LONG).show();\r\n                        }\r\n                        else //if(c>0)\r\n                        {progressDialog.dismiss();\r\n                            txtCurrentDate.setText(s_dt+\" Bet Close\");\r\n                            txtNextDate.setText(n_dt+\" Bet Open\");\r\n                            txtAfterNextDate.setText(a_dt+\" Bet Open\");\r\n\r\n                        }\r\n\r\n                    } else {\r\n                        progressDialog.dismiss();\r\n                        Toast.makeText(context,\"Something erong\", Toast.LENGTH_LONG).show();\r\n\r\n\r\n                    }\r\n                } catch (Exception ex) {\r\n                    progressDialog.dismiss();\r\n                    Toast.makeText(context,\"Something erong\"+ex.getMessage(), Toast.LENGTH_LONG).show();\r\n\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n\r\n                progressDialog.dismiss();\r\n                String msg=VolleyErrorMessage(error);\r\n                errorMessageDialog(msg);\r\n\r\n            }\r\n        });\r\n        AppController.getInstance().addToRequestQueue(customJsonRequest,json_tag);\r\n\r\n\r\n\r\n    }\r\n\r\n    //Function for red_bracket,jodi group\r\n\r\n    public void setBetDateDayTo(final String m_id, final Button btnGameType, final LoadingBar progressDialog) {\r\n\r\n        progressDialog.show();\r\n\r\n        String json_tag=\"json_bet\";\r\n        HashMap<String, String> params=new HashMap<>();\r\n        params.put(\"id\",m_id);\r\n\r\n        CustomJsonRequest customJsonRequest=new CustomJsonRequest(Request.Method.POST, BaseUrls.URL_MATKA_WITH_ID, params, new Response.Listener<JSONObject>() {\r\n            @Override\r\n            public void onResponse(JSONObject response) {\r\n\r\n                try {\r\n                    JSONObject jsonObject = response;\r\n                    String status = jsonObject.getString(\"status\");\r\n                    if (status.equals(\"success\")) {\r\n                        JSONObject object = jsonObject.getJSONObject(\"data\");\r\n                        MatkasObjects matkasObjects = new MatkasObjects();\r\n                        matkasObjects.setId(object.getString(\"id\"));\r\n                        matkasObjects.setName(object.getString(\"name\"));\r\n                        matkasObjects.setStart_time(object.getString(\"start_time\"));\r\n                        matkasObjects.setStarting_num(object.getString(\"starting_num\"));\r\n                        matkasObjects.setNumber(object.getString(\"number\"));\r\n                        matkasObjects.setEnd_num(object.getString(\"end_num\"));\r\n                        matkasObjects.setBid_start_time(object.getString(\"bid_start_time\"));\r\n                        matkasObjects.setBid_end_time(object.getString(\"bid_end_time\"));\r\n                        matkasObjects.setCreated_at(object.getString(\"created_at\"));\r\n                        matkasObjects.setUpdated_at(object.getString(\"updated_at\"));\r\n                        matkasObjects.setStatus(object.getString(\"status\"));\r\n\r\n                        String bid_start = matkasObjects.getBid_start_time();\r\n                        String bid_end=matkasObjects.getBid_end_time().toString();\r\n\r\n                        String time1 = bid_start.toString();\r\n                        String time2 = bid_end.toString();\r\n\r\n                        Date cdate=new Date();\r\n\r\n\r\n\r\n                        SimpleDateFormat format = new SimpleDateFormat(\"HH:mm:ss\");\r\n                        String time3=format.format(cdate);\r\n                        Date date1 = null;\r\n                        Date date2=null;\r\n                        Date date3=null;\r\n                        try {\r\n                            date1 = format.parse(time1);\r\n                            date2 = format.parse(time2);\r\n                            date3=format.parse(time3);\r\n                        } catch (ParseException e1) {\r\n                            e1.printStackTrace();\r\n                        }\r\n\r\n                        long difference = date3.getTime() - date1.getTime();\r\n                        long as=(difference/1000)/60;\r\n\r\n                        long diff_close=date3.getTime()-date2.getTime();\r\n                        long c=(diff_close/1000)/60;\r\n\r\n                        Date c_dat=new Date();\r\n                        SimpleDateFormat dateFormat=new SimpleDateFormat(\"dd/MM/yyyy EEEE\");\r\n                        String s_dt=dateFormat.format(c_dat);\r\n                        String n_dt= getNextDate(s_dt);\r\n                        String a_dt= getNextDate(n_dt);\r\n\r\n                        if(as>0)\r\n                        {progressDialog.dismiss();\r\n                            btnGameType.setText(s_dt+\" Bet Close\");\r\n\r\n\r\n                            // Toast.makeText(OddEvenActivity.this,\"\"+s_dt+\"  Close\",Toast.LENGTH_LONG).show();\r\n                        }\r\n                        else\r\n                        {\r\n                            progressDialog.dismiss();\r\n                            btnGameType.setText(s_dt+\" Bet Open\");\r\n\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        progressDialog.dismiss();\r\n                        Toast.makeText(context,\"Something wrong\", Toast.LENGTH_LONG).show();\r\n                    }\r\n                } catch (Exception ex) {\r\n                    progressDialog.dismiss();\r\n                    Toast.makeText(context,\"Something wrong\"+ex.getMessage(), Toast.LENGTH_LONG).show();\r\n\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n\r\n                progressDialog.dismiss();\r\n                String msg=VolleyErrorMessage(error);\r\n                errorMessageDialog(msg);\r\n            }\r\n        });\r\n\r\n        AppController.getInstance().addToRequestQueue(customJsonRequest,json_tag);\r\n    }\r\n\r\n    //New function for getBetType and Bet Date\r\n    public void getBetSession(final String m_id, final LoadingBar progressDialog, final VolleyCallBack callBack)\r\n    {\r\n        String json_request_tag=\"matka_with_id\";\r\n        HashMap<String, String> params=new HashMap<String, String>();\r\n        params.put(\"id\",m_id);\r\n        progressDialog.show();\r\n\r\n        CustomJsonRequest customJsonRequest=new CustomJsonRequest(Request.Method.POST, BaseUrls.URL_MATKA_WITH_ID, params, new Response.Listener<JSONObject>() {\r\n            @Override\r\n            public void onResponse(JSONObject response) {\r\n                try\r\n                {\r\n                    String status=response.getString(\"status\");\r\n                    if(status.equals(\"success\"))\r\n                    {\r\n                        JSONObject jsonObject=response.getJSONObject(\"data\");\r\n                        MatkasObjects matkasObjects = new MatkasObjects();\r\n                        matkasObjects.setId(jsonObject.getString(\"id\"));\r\n                        matkasObjects.setName(jsonObject.getString(\"name\"));\r\n                        matkasObjects.setStart_time(jsonObject.getString(\"start_time\"));\r\n                        matkasObjects.setEnd_time(jsonObject.getString(\"end_time\"));\r\n                        matkasObjects.setStarting_num(jsonObject.getString(\"starting_num\"));\r\n                        matkasObjects.setNumber(jsonObject.getString(\"number\"));\r\n                        matkasObjects.setEnd_num(jsonObject.getString(\"end_num\"));\r\n                        matkasObjects.setBid_start_time(jsonObject.getString(\"bid_start_time\"));\r\n                        matkasObjects.setBid_end_time(jsonObject.getString(\"bid_end_time\"));\r\n                        matkasObjects.setCreated_at(jsonObject.getString(\"created_at\"));\r\n                        matkasObjects.setUpdated_at(jsonObject.getString(\"updated_at\"));\r\n                        matkasObjects.setSat_start_time(jsonObject.getString(\"sat_start_time\"));\r\n                        matkasObjects.setSat_end_time(jsonObject.getString(\"sat_end_time\"));\r\n                        matkasObjects.setStatus(jsonObject.getString(\"status\"));\r\n\r\n                        String dt=new SimpleDateFormat(\"EEEE\").format(new Date());\r\n                        String bid_start = \"\";\r\n                        String bid_end=\"\";\r\n//                        String bid_start = matkasObjects.getBid_start_time();\r\n//                        String bid_end=matkasObjects.getBid_end_time().toString();\r\n\r\n                        if(dt.equals(\"Sunday\"))\r\n                        {\r\n                            bid_start=matkasObjects.getStart_time();\r\n                            bid_end=matkasObjects.getEnd_time();\r\n                        }\r\n                        else if(dt.equals(\"Saturday\"))\r\n                        {\r\n                            bid_start=matkasObjects.getSat_start_time();\r\n                            bid_end=matkasObjects.getSat_end_time();\r\n\r\n                        }\r\n                        else\r\n                        {\r\n                            bid_start=matkasObjects.getBid_start_time();\r\n                            bid_end=matkasObjects.getBid_end_time();\r\n\r\n                        }\r\n\r\n\r\n                        Module module=new Module();\r\n                        String time1 = bid_start.toString();\r\n                        String time2 = bid_end.toString();\r\n                        long start_diff=getTimeDifference(time1);\r\n                        long end_diff=getTimeDifference(time2);\r\n                        HashMap<String, String> map=new HashMap<>();\r\n                        map.put(\"s_diff\", String.valueOf(start_diff));\r\n                        map.put(\"e_diff\", String.valueOf(end_diff));\r\n                        callBack.getTimeDiffrence(map);\r\n\r\n                    } else {\r\n                        progressDialog.dismiss();\r\n                        Toast.makeText(context,\"Something wrong\", Toast.LENGTH_LONG).show();\r\n\r\n\r\n                    }\r\n           }\r\n                catch (Exception ex)\r\n                {\r\n                    ex.printStackTrace();\r\n                    Toast.makeText(context,\"something went wrong \", Toast.LENGTH_LONG).show();\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                progressDialog.dismiss();\r\n                String msg=VolleyErrorMessage(error);\r\n                errorMessageDialog(msg);\r\n            }\r\n        });\r\n        AppController.getInstance().addToRequestQueue(customJsonRequest,json_request_tag);\r\n    }\r\n\r\n    public void setSessionTimeOut(final Context context)\r\n    {\r\n        try\r\n        {\r\n            new Handler().postDelayed(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n\r\n                    sessionTimeOut();\r\n\r\n                }\r\n            },600000);\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public void sessionTimeOut()\r\n    {\r\n\r\n        final Dialog dialog=new Dialog(context);\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.setContentView(R.layout.dialog_error_message_dialog);\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(0));\r\n        TextView txtMessage=(TextView)dialog.findViewById(R.id.txtmessage);\r\n        Button btnOk=(Button)dialog.findViewById(R.id.btnOK);\r\n        dialog.setCanceledOnTouchOutside(false);\r\n        dialog.show();\r\n\r\n        txtMessage.setText(\"Session TimeOut\");\r\n\r\n        btnOk.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n\r\n                Intent intent1=new Intent(context, LoginActivity.class);\r\n                dialog.dismiss();\r\n                intent1.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK| Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                context.startActivity(intent1);\r\n\r\n\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    public void updateWalletAmount(final JSONArray jsonArray, final LoadingBar progressDialog, final String matka_name, final String m_id, final String start_time, final String end_time )\r\n    {\r\n        final String data= String.valueOf(jsonArray);\r\n        String json_request_tag=\"json_insert_request\";\r\n        HashMap<String, String> params=new HashMap<String, String>();\r\n        params.put(\"data\",data);\r\n        Log.e(\"json_arr\",data);\r\n\r\n\r\n     //  Toast.makeText(context,\"\"+data,Toast.LENGTH_LONG).show();\r\n        if(progressDialog.isShowing())\r\n        {\r\n            progressDialog.dismiss();\r\n        }\r\n        progressDialog.show();\r\n\r\n\r\n        CustomJsonRequest customJsonRequest=new CustomJsonRequest(Request.Method.POST, URL_INSERT_DATA, params, new Response.Listener<JSONObject>() {\r\n            @Override\r\n            public void onResponse(JSONObject response) {\r\n\r\n                try\r\n                {\r\n                    Log.d(\"insert_data\",response.toString());\r\n                    JSONObject jsonObject=response;\r\n                    final String status=jsonObject.getString(\"status\");\r\n                    progressDialog.dismiss();\r\n                    if(status.equals(\"success\"))\r\n                    {\r\n\r\n                        Intent intent=new Intent(context, MainActivity.class);\r\n//                        intent.putExtra(\"matkaName\",matka_name);\r\n//                        intent.putExtra(\"m_id\",m_id);\r\n//                        intent.putExtra(\"end_time\",end_time);\r\n//                        intent.putExtra(\"start_time\",start_time);\r\n                        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK| Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n\r\n                        context.startActivity(intent);\r\n\r\n                       new ToastMsg(context).toastIconSuccess(\"Bid Added Successfully.\");\r\n                    }\r\n                    else if(status.equals(\"failed\"))\r\n                    {\r\n                        String sd=status.toString();\r\n                        errorMessageDialog(sd.toString());\r\n                        // Toast.makeText(context,\"Something went wrong\",Toast.LENGTH_LONG).show();\r\n                    }\r\n                    else if(status.equals(\"timeout\"))\r\n                    {\r\n\r\n                        final Dialog myDialog=new Dialog(context);\r\n                        myDialog.setContentView(R.layout.dialog_error_message_dialog);\r\n                        myDialog.getWindow().setBackgroundDrawable(new ColorDrawable(0));\r\n                        TextView txtmessage=(TextView)myDialog.findViewById(R.id.txtmessage);\r\n                        Button btnOK=(Button) myDialog.findViewById(R.id.btnOK);\r\n\r\n                        txtmessage.setText(\"Biding closed for this date\");\r\n                        btnOK.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View view) {\r\n\r\n                                myDialog.dismiss();\r\n\r\n                                String sd=status.toString();\r\n                                //errorMessageDialog(context,sd.toString());\r\n                                Intent intent=new Intent(context, MainActivity.class);\r\n                                context.startActivity(intent);\r\n                            }\r\n                        });\r\n\r\n                        myDialog.show();\r\n//                        String sd=status.toString();\r\n//                        errorMessageDialog(context,sd.toString());\r\n//                        Intent intent=new Intent(context,HomeActivity.class);\r\n//                        context.startActivity(intent);\r\n\r\n\r\n                    }\r\n\r\n\r\n\r\n\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    progressDialog.dismiss();\r\n                    ex.printStackTrace();\r\n                    Log.e(\"\",ex.getStackTrace().toString());\r\n//                    Toast.makeText(context,\"Err\"+ex.getMessage(), Toast.LENGTH_LONG).show();\r\n                    new ToastMsg(context).toastIconError(\"Err\"+ex.getMessage());\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                progressDialog.dismiss();\r\n\r\n                String msg=VolleyErrorMessage(error);\r\n                errorMessageDialog(msg);\r\n\r\n\r\n            }\r\n        });\r\n        customJsonRequest.setRetryPolicy(new DefaultRetryPolicy(\r\n                500000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT\r\n        ));\r\n        AppController.getInstance().addToRequestQueue(customJsonRequest,json_request_tag);\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    public String getRandomKey(int i)\r\n    {\r\n        final String characters=\"0123456789\";\r\n        StringBuilder stringBuilder=new StringBuilder();\r\n        while (i>0)\r\n        {\r\n            Random ran=new Random();\r\n            stringBuilder.append(characters.charAt(ran.nextInt(characters.length())));\r\n            i--;\r\n        }\r\n        return stringBuilder.toString();\r\n    }\r\n\r\n    public String checkNull(String s)\r\n    {\r\n        String str=\"\";\r\n        if(s==null || s.isEmpty() || s.equalsIgnoreCase(\"null\"))\r\n        {\r\n            str=\"\";\r\n        }\r\n        else\r\n        {\r\n            str=s;\r\n        }\r\n        return str;\r\n    }\r\n\r\n    public void setDataEditText(EditText edt, String data)\r\n    {\r\n        String s=data.toString();\r\n        if(data.equalsIgnoreCase(\"null\"))\r\n        {\r\n\r\n        }\r\n        else\r\n        {\r\n            edt.setText(data.toString());\r\n        }\r\n    }\r\n    public String getUserId()\r\n    {\r\n        return session_management.getUserDetails().get(KEY_ID).toString();\r\n    }\r\n    public String getUserWallet()\r\n    {\r\n        return session_management.getUserDetails().get(KEY_WALLET).toString();\r\n    }\r\n\r\n    public void updatePoints(ArrayList<TableModel> list,int pos,String points,String betType)\r\n    {\r\n        TableModel tableModel=list.get(pos);\r\n        tableModel.setPoints(points);\r\n        tableModel.setType(betType);\r\n    }\r\n\r\n    public String get24To12Format(String timestr)\r\n    {\r\n        String tm=\"\";\r\n        SimpleDateFormat _24HourSDF = new SimpleDateFormat(\"HH:mm:ss\");\r\n        SimpleDateFormat _12HourSDF = new SimpleDateFormat(\"hh:mm a\");\r\n\r\n        try {\r\n            Date _24Hourst = _24HourSDF.parse(timestr);\r\n            tm = _12HourSDF.format(_24Hourst);\r\n\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return tm;\r\n    }\r\n    public void printBidList(ArrayList<TableModel> list)\r\n    {\r\n        for(int i=0; i<list.size();i++)\r\n        {\r\n            Log.e(\"bet_list_data\",\"\"+list.get(i).getDigits()+\" - \"+list.get(i).getPoints()+\" - \"+list.get(i).getType());\r\n        }\r\n    }\r\n\r\n    public void setPanaPoints(HashMap<String,String> map, int totAmt, ArrayList<TableModel> list,String game_name, final UpdateTotalBidAmount updateTotalBidAmount)\r\n    {\r\n\r\n         int pos = 0;\r\n         if(game_name.equalsIgnoreCase(\"Single Pana\"))\r\n         {\r\n             switch (map.get(REV_FRAG_POSITION).toString())\r\n             {\r\n                 case \"1\":\r\n                     pos =Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n                 case \"2\":\r\n                     pos =12+Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n                 case \"3\":\r\n                     pos =24+Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n                 case \"4\":\r\n                     pos =36+Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n                 case \"5\":\r\n                     pos =48+Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n                 case \"6\":\r\n                     pos =60+Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n                 case \"7\":\r\n                     pos =72+Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n                 case \"8\":\r\n                     pos =84+Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n                 case \"9\":\r\n                     pos =96+Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n                 case \"10\":\r\n                     pos =108+Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n             }\r\n\r\n         }\r\n         else\r\n         {\r\n             switch (map.get(REV_FRAG_POSITION).toString())\r\n             {\r\n                 case \"1\":\r\n                     pos =Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n                 case \"2\":\r\n                     pos =10+Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n                 case \"3\":\r\n                     pos =20+Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n                 case \"4\":\r\n                     pos =30+Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n                 case \"5\":\r\n                     pos =40+Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n                 case \"6\":\r\n                     pos =50+Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n                 case \"7\":\r\n                     pos =60+Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n                 case \"8\":\r\n                     pos =70+Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n                 case \"9\":\r\n                     pos =80+Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n                 case \"10\":\r\n                     pos =90+Integer.parseInt(map.get(REV_POSITION).toString());\r\n                     break;\r\n             }\r\n\r\n         }\r\n\r\n            if(map.get(REV_TYPE).toString().equalsIgnoreCase(\"add\"))\r\n            {\r\n                addBidToList(map.get(REV_POINTS).toString(), map.get(REV_BET_TYPE).toString(), pos, map.get(REV_BEFORE_VALUE).toString(), totAmt, list, new UpdateBidAmount() {\r\n                    @Override\r\n                    public void updateBidAmount(int amt) {\r\n\r\n                        updateTotalBidAmount.updateTotalBidAmount(amt);\r\n                    }\r\n                });\r\n            }\r\n            else if(map.get(REV_TYPE).toString().equalsIgnoreCase(\"sub\"))\r\n            {\r\n                removeBidToList(map.get(REV_POINTS).toString(), map.get(REV_BET_TYPE).toString(), pos, map.get(REV_BEFORE_VALUE).toString(), totAmt, list, new UpdateBidAmount() {\r\n                    @Override\r\n                    public void updateBidAmount(int amt) {\r\n                        updateTotalBidAmount.updateTotalBidAmount(amt);\r\n                    }\r\n                });\r\n            }\r\n\r\n    }\r\n\r\n    private void removeBidToList(String pnts, String bet_type, int pos, String beforevalue, int tot, ArrayList<TableModel> bet_list, UpdateBidAmount updateBidAmount) {\r\n        if(!pnts.isEmpty())\r\n        {\r\n            if(tot!=0)\r\n            {\r\n                int tx= Integer.parseInt(pnts);\r\n                int beforeValue=Integer.parseInt(beforevalue);\r\n\r\n                if(pnts.length()==1)\r\n                {\r\n                    tot = (tot)-beforeValue;\r\n                }\r\n                else if(pnts.length()==2)\r\n                {\r\n                    tot = (tot+tx)-beforeValue;\r\n                }\r\n                else if(pnts.length() == 3)\r\n                {\r\n                    tot = (tot+tx)-beforeValue;\r\n                }\r\n                else if(pnts.length()==4)\r\n                {\r\n\r\n                    tot = (tot+tx)-beforeValue;\r\n                }\r\n                else if(pnts.length()==5)\r\n                {\r\n\r\n                    tot = (tot+tx)-beforeValue;\r\n                }\r\n                updateBidAmount.updateBidAmount(tot);\r\n                if (bet_type.toString().equals(context.getResources().getString(R.string.select_type)))\r\n                {\r\n                }\r\n                else {\r\n                    if(pnts.length()>1)\r\n                    {\r\n                        updatePoints(bet_list,pos,pnts,bet_type.toString());\r\n                    }else\r\n                    {\r\n                        updatePoints(bet_list,pos,\"0\",bet_type.toString());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private void addBidToList(String points, String bet_type, int position, String beforevalue,int tot,ArrayList<TableModel> bet_list,UpdateBidAmount updateBidAmount) {\r\n        if (points.length() != 0) {\r\n\r\n            if (points.isEmpty()) {\r\n\r\n            }\r\n            else {\r\n                int ps = Integer.parseInt(points);\r\n                if(points.length()==2)\r\n                {\r\n                    tot = tot + ps;\r\n                }\r\n                else if(points.length() == 3)\r\n                {\r\n                    tot = (tot + ps)-Integer.parseInt(beforevalue);\r\n                }\r\n                else if(points.length()==4)\r\n                {\r\n                    tot = (tot + ps)-Integer.parseInt(beforevalue);\r\n  }\r\n                else if(points.length()==5)\r\n                {\r\n                    tot = (tot + ps)-Integer.parseInt(beforevalue);\r\n                }\r\n                updateBidAmount.updateBidAmount(tot);\r\n                if (bet_type.toString().equals(context.getResources().getString(R.string.select_type)))\r\n                {\r\n                }\r\n                else {\r\n                    updatePoints(bet_list,position,points,bet_type.toString());\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public int getIndexFromFragmentPosition(int fragPos,String game_name)\r\n    {\r\n        int pos=0;\r\n        if(game_name.equalsIgnoreCase(\"Single Pana\"))\r\n        {\r\n            switch (fragPos)\r\n            {\r\n                case 1:\r\n                    pos=0;\r\n                    break;\r\n                case 2:\r\n                    pos=12;\r\n                    break;\r\n                case 3:\r\n                    pos=24;\r\n                    break;\r\n                case 4:\r\n                    pos=36;\r\n                    break;\r\n                case 5:\r\n                    pos=48;\r\n                    break;\r\n                case 6:\r\n                    pos=60;\r\n                    break;\r\n                case 7:\r\n                    pos=72;\r\n                    break;\r\n                case 8:\r\n                    pos=84;\r\n                    break;\r\n                case 9:\r\n                    pos=96;\r\n                    break;\r\n                case 10:\r\n                    pos=108;\r\n                    break;\r\n            }\r\n\r\n        }\r\n        else if(game_name.equalsIgnoreCase(\"Double Pana\"))\r\n        {\r\n            switch (fragPos)\r\n            {\r\n                case 1:\r\n                    pos=0;\r\n                    break;\r\n                case 2:\r\n                    pos=10;\r\n                    break;\r\n                case 3:\r\n                    pos=20;\r\n                    break;\r\n                case 4:\r\n                    pos=30;\r\n                    break;\r\n                case 5:\r\n                    pos=40;\r\n                    break;\r\n                case 6:\r\n                    pos=50;\r\n                    break;\r\n                case 7:\r\n                    pos=60;\r\n                    break;\r\n                case 8:\r\n                    pos=70;\r\n                    break;\r\n                case 9:\r\n                    pos=80;\r\n                    break;\r\n\r\n            }\r\n\r\n        }\r\n        return pos;\r\n    }\r\n   public String getPointsOnIndex(ArrayList<TableModel> list,int pox)\r\n   {\r\n       String str=\"\";\r\n       if(!(list.size()<=0)) {\r\n           String pnt = list.get(pox).getPoints().toString();\r\n           if (!pnt.equals(\"0\")) {\r\n               str = pnt;\r\n           }\r\n       }\r\n       return str;\r\n   }\r\n\r\n    public void getWalletAmount()\r\n    {\r\n        loadingBar.show();\r\n        HashMap<String,String> params=new HashMap<>();\r\n        params.put(\"user_id\",session_management.getUserDetails().get(KEY_ID).toString());\r\n        CustomVolleyJsonArrayRequest jsonArrayRequest=new CustomVolleyJsonArrayRequest(Request.Method.POST, BaseUrls.URL_GET_WALLET_AMOUNT, params, new Response.Listener<JSONArray>() {\r\n            @Override\r\n            public void onResponse(JSONArray response) {\r\n                loadingBar.dismiss();\r\n                Log.e(\"wallet\",response.toString());\r\n                try {\r\n                    JSONObject object=response.getJSONObject(0);\r\n                    String wamt=object.getString(\"wallet_points\");\r\n                    session_management.updateWallet(wamt);\r\n                    Log.e(\"Common_wallet\",\"wallet_amt_-- \"+session_management.getUserDetails().get(KEY_WALLET));\r\n                    ((MainActivity)context).setWallet_Amount(String.valueOf(wamt));\r\n\r\n                }\r\n                catch (Exception ex)\r\n                {\r\n                    ex.printStackTrace();\r\n                }\r\n\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                loadingBar.dismiss();\r\n                showVolleyError(error);\r\n            }\r\n        });\r\n        AppController.getInstance().addToRequestQueue(jsonArrayRequest);\r\n\r\n    }\r\n\r\n    public boolean checkNullString(String str){\r\n\r\n        if(str == null || str.isEmpty() || str.equalsIgnoreCase(\"null\")){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public void appSettingData(final GetAppSettingData settingData){\r\n        loadingBar.show();\r\n        HashMap<String,String> params=new HashMap<>();\r\n        CustomVolleyJsonArrayRequest arrayRequest=new CustomVolleyJsonArrayRequest(Request.Method.POST, BaseUrls.URL_INDEX, params, new Response.Listener<JSONArray>() {\r\n            @Override\r\n            public void onResponse(JSONArray response) {\r\n                loadingBar.dismiss();\r\n                try {\r\n                    List<AppSettingModel> list=new ArrayList<>();\r\n                    list.clear();\r\n                    Gson gson=new Gson();\r\n                    Type listType=new TypeToken<List<AppSettingModel>>(){}.getType();\r\n                    list=gson.fromJson(response.toString(),listType);\r\n                    settingData.getAppSettingData(list.get(0));\r\n\r\n                }catch (Exception ex){\r\n                    ex.printStackTrace();\r\n                }\r\n\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                loadingBar.dismiss();\r\n                showVolleyError(error);\r\n            }\r\n        });\r\n        AppController.getInstance().addToRequestQueue(arrayRequest);\r\n    }\r\n\r\n    public void postRequest(final String url, final HashMap<String,String> params, Response.Listener<String> listener, Response.ErrorListener errorListener){\r\n        if(!ConnectivityReceiver.isConnected()){\r\n            showToast(\"No Internet Connection\");\r\n            return;\r\n        }\r\n\r\n        StringRequest request=new StringRequest(Request.Method.POST,url,listener,errorListener){\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Log.e(\"url_params\", \"\"+url+\" - \"+params);\r\n                return params;\r\n            }\r\n        };\r\n        RetryPolicy mRetryPolicy = new DefaultRetryPolicy(\r\n                10000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT);\r\n        request.setRetryPolicy(mRetryPolicy);\r\n        AppController.getInstance().addToRequestQueue(request,\"req\");\r\n    }\r\n\r\n    public void whatsapp(String phone, String message) {\r\n        PackageManager packageManager = context.getPackageManager();\r\n        Intent i = new Intent(Intent.ACTION_VIEW);\r\n\r\n        try {\r\n            String url = \"whatsapp://send?phone=91\"+ phone +\"&text=\" + URLEncoder.encode(message, \"UTF-8\");\r\n            i.setData(Uri.parse(url));\r\n            if (i.resolveActivity(packageManager) != null) {\r\n                context.startActivity(i);\r\n            }\r\n        } catch (Exception e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/in/games/rosegame/Common/Common.java	(revision 44e209894906bad2c634047aa799280748a83d6d)
+++ app/src/main/java/in/games/rosegame/Common/Common.java	(date 1611854743411)
@@ -91,6 +91,7 @@
 import static in.games.rosegame.Config.Constants.REV_TYPE;
 
 public class Common {
+
     Context context;
   Session_management session_management;
   LoadingBar loadingBar;
@@ -506,7 +507,8 @@
     }
 
 
-    public void insertData(List<TableModel> list, String m_id, String c, String game_id, String w, String dashName, LoadingBar progressDialog, Button btnSave, final String start_time, final String end_time) {
+    public void insertData(List<TableModel> list, String m_id, String c, String game_id, String w, String dashName, LoadingBar progressDialog,
+                           Button btnSave, final String start_time, final String end_time) {
         int er = list.size();
         if (er <= 0) {
             String message = "Please Add Some Bids";
@@ -1522,8 +1524,11 @@
                     progressDialog.dismiss();
                     ex.printStackTrace();
                     Log.e("",ex.getStackTrace().toString());
-//                    Toast.makeText(context,"Err"+ex.getMessage(), Toast.LENGTH_LONG).show();
+
                     new ToastMsg(context).toastIconError("Err"+ex.getMessage());
+
+
+
                 }
             }
         }, new Response.ErrorListener() {
@@ -1729,7 +1734,8 @@
 
     }
 
-    private void removeBidToList(String pnts, String bet_type, int pos, String beforevalue, int tot, ArrayList<TableModel> bet_list, UpdateBidAmount updateBidAmount) {
+    private void removeBidToList(String pnts, String bet_type, int pos, String beforevalue,
+                                 int tot, ArrayList<TableModel> bet_list, UpdateBidAmount updateBidAmount) {
         if(!pnts.isEmpty())
         {
             if(tot!=0)
@@ -1777,7 +1783,9 @@
 
     }
 
-    private void addBidToList(String points, String bet_type, int position, String beforevalue,int tot,ArrayList<TableModel> bet_list,UpdateBidAmount updateBidAmount) {
+    private void addBidToList(String points, String bet_type, int position,
+                              String beforevalue,int tot,ArrayList<TableModel> bet_list,
+                              UpdateBidAmount updateBidAmount) {
         if (points.length() != 0) {
 
             if (points.isEmpty()) {
@@ -1794,6 +1802,7 @@
                     tot = (tot + ps)-Integer.parseInt(beforevalue);
                 }
                 else if(points.length()==4)
+
                 {
                     tot = (tot + ps)-Integer.parseInt(beforevalue);
   }
Index: app/src/main/java/in/games/rosegame/Activity/RegisterActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package in.games.rosegame.Activity;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\n\r\nimport android.text.TextUtils;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.EditText;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.android.volley.Request;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\n\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.HashMap;\r\n\r\nimport in.games.rosegame.AppController;\r\nimport in.games.rosegame.Common.Common;\r\nimport in.games.rosegame.Config.BaseUrls;\r\nimport in.games.rosegame.R;\r\nimport in.games.rosegame.Util.ConnectivityReceiver;\r\nimport in.games.rosegame.Util.CustomJsonRequest;\r\nimport in.games.rosegame.networkconnectivity.NoInternetConnection;\r\n\r\npublic class RegisterActivity extends AppCompatActivity {\r\n    ProgressDialog progressDialog;\r\n    String mobile = \"\";\r\n    private Button btnRegister;\r\n    TextView txt_back ;\r\n    Common common;\r\n\r\n    CheckBox checkbox;\r\n    private EditText txtName,txtMobile,txtPass,txtConPass,txtUserName;\r\n//    static String URL_REGIST=\"http://anshuwap.com/AddaApp/register.php\";\r\n\r\n    ProgressBar pb;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_register);\r\n\r\n        checkbox=findViewById (R.id.checkbox);\r\n\r\n        txt_back = findViewById(R.id.txt_back);\r\n        txtName=(EditText)findViewById(R.id.etName);\r\n       common=new Common(RegisterActivity.this);\r\n        txtMobile=(EditText)findViewById(R.id.etMobile);\r\n        txtPass=(EditText)findViewById(R.id.etPass);\r\n        txtConPass=(EditText)findViewById(R.id.etConPass);\r\n        txtUserName=(EditText)findViewById(R.id.etUserName);\r\n        btnRegister=(Button)findViewById(R.id.btnRegister);\r\n        progressDialog=new ProgressDialog(RegisterActivity.this);\r\n        progressDialog.setMessage(\"Loading...\");\r\n      //  progressDialog.setMessage(\"Please wait for a moment\");\r\n        txt_back.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                finish();\r\n            }\r\n        });\r\n        mobile = getIntent().getStringExtra(\"mobile\");\r\n        txtMobile.setText(mobile);\r\n        txtMobile.setEnabled(false);\r\n\r\n      btnRegister.setOnClickListener(new View.OnClickListener() {\r\n          @Override\r\n          public void onClick(View v) {\r\n//              String em=txtEmail.getText().toString().trim();\r\n              if(TextUtils.isEmpty(txtUserName.getText().toString()))\r\n              {\r\n                  txtUserName.setError(\"Please Enter User name\");\r\n                  txtUserName.requestFocus();\r\n                  return;\r\n              }\r\n              else if(TextUtils.isEmpty(txtName.getText().toString()))\r\n              {\r\n                  txtName.setError(\"Please Enter name\");\r\n                  txtName.requestFocus();\r\n                  return;\r\n              }\r\n              else  if(TextUtils.isEmpty(txtMobile.getText().toString()))\r\n              {\r\n                  txtMobile.setError(\"Please enter mobile number\");\r\n                  txtMobile.requestFocus();\r\n                  return;\r\n              }else  if(TextUtils.isEmpty(txtPass.getText().toString()))\r\n              {\r\n                  txtPass.setError(\"Please enter password\");\r\n                  txtPass.requestFocus();\r\n                  return;\r\n              }else  if(TextUtils.isEmpty(txtConPass.getText().toString()))\r\n              {\r\n                  txtConPass.setError(\"Please re-enter password\");\r\n                  txtConPass.requestFocus();\r\n                  return;\r\n              }\r\n              else if(!checkbox.isChecked ()){\r\n                  Toast.makeText (RegisterActivity.this, \"Please Accept Terms and Conditions\", Toast.LENGTH_SHORT).show ( );\r\n\r\n              }\r\n\r\n              else\r\n              {\r\n                  String phone_value=txtMobile.getText().toString().trim();\r\n                  int sf= Integer.parseInt(phone_value.substring(0,1));\r\n                  int len=phone_value.length();\r\n\r\n                  if(sf<6 || len<10)\r\n                  {\r\n                      Toast.makeText(RegisterActivity.this,\"Invalid Mobile number \\n\" +\r\n                              \"mobile number never start with 0 and <6\", Toast.LENGTH_LONG).show();\r\n                  }\r\n                  else\r\n                  {\r\n                      String pass=txtPass.getText().toString().trim();\r\n                      String conpass=txtConPass.getText().toString().trim();\r\n                      if(pass.equals(conpass))\r\n                      {\r\n                          if (ConnectivityReceiver.isConnected()) {\r\n\r\n                              register(phone_value);\r\n                          }\r\n                          else\r\n                          {\r\n                              Intent intent = new Intent(RegisterActivity.this, NoInternetConnection.class);\r\n                              startActivity(intent);\r\n                          }\r\n\r\n                      }\r\n                      else\r\n                      {\r\n                          Toast.makeText(RegisterActivity.this,\"password must be matched\", Toast.LENGTH_LONG).show();\r\n                          return;\r\n                      }\r\n\r\n                  }\r\n              }\r\n\r\n\r\n          }\r\n      });\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    public String validMobile(String phone)\r\n    {\r\n        String value=\"\";\r\n        int len=phone.length();\r\n\r\n        switch (len)\r\n        {\r\n            case 10:\r\n                value=phone;\r\n                break;\r\n            case 13:\r\n                value=phone.substring(3,13);\r\n                break;\r\n            default:\r\n                value=\"invalid\";\r\n\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n\r\n    private void register(String phone_value) {\r\n\r\n        progressDialog.show();\r\n        final String uname=txtUserName.getText().toString().trim();\r\n        final String fname=txtName.getText().toString().trim();\r\n        final String fmobile=phone_value;\r\n        final String fpass=txtPass.getText().toString().trim();\r\n        final String fconpass=txtConPass.getText().toString().trim();\r\n\r\n        HashMap<String,String> params=new HashMap<>();\r\n        params.put(\"key\",\"1\");\r\n        params.put(\"username\",uname);\r\n        params.put(\"name\",fname);\r\n        params.put(\"mobile\",fmobile);\r\n        params.put(\"password\",fpass);\r\n        CustomJsonRequest customJsonRequest=new CustomJsonRequest(Request.Method.POST, BaseUrls.URL_REGISTER, params, new Response.Listener<JSONObject>() {\r\n            @Override\r\n            public void onResponse(JSONObject response) {\r\n                progressDialog.dismiss();\r\n               try {\r\n                  boolean resp=response.getBoolean(\"responce\");\r\n                  if(resp)\r\n                  {\r\n                      common.showToast(\"\"+response.getString(\"message\").toString());\r\n                      Intent intent=new Intent(RegisterActivity.this,LoginActivity.class);\r\n                      startActivity(intent);\r\n                      finish();\r\n\r\n                  }\r\n                  else\r\n                  {\r\n                      common.showToast(response.getString(\"error\").toString());\r\n                  }\r\n               }\r\n               catch (Exception ex)\r\n               {\r\n                   ex.printStackTrace();\r\n               }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                progressDialog.dismiss();\r\n                common.showVolleyError(error);\r\n            }\r\n        });\r\n        AppController.getInstance().addToRequestQueue(customJsonRequest);\r\n\r\n        }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/in/games/rosegame/Activity/RegisterActivity.java	(revision 44e209894906bad2c634047aa799280748a83d6d)
+++ app/src/main/java/in/games/rosegame/Activity/RegisterActivity.java	(date 1610733393756)
@@ -29,10 +29,11 @@
 import in.games.rosegame.R;
 import in.games.rosegame.Util.ConnectivityReceiver;
 import in.games.rosegame.Util.CustomJsonRequest;
+import in.games.rosegame.Util.LoadingBar;
 import in.games.rosegame.networkconnectivity.NoInternetConnection;
 
 public class RegisterActivity extends AppCompatActivity {
-    ProgressDialog progressDialog;
+    LoadingBar progressDialog;
     String mobile = "";
     private Button btnRegister;
     TextView txt_back ;
@@ -58,8 +59,8 @@
         txtConPass=(EditText)findViewById(R.id.etConPass);
         txtUserName=(EditText)findViewById(R.id.etUserName);
         btnRegister=(Button)findViewById(R.id.btnRegister);
-        progressDialog=new ProgressDialog(RegisterActivity.this);
-        progressDialog.setMessage("Loading...");
+        progressDialog=new LoadingBar (RegisterActivity.this);
+        //progressDialog.setMessage("Loading...");
       //  progressDialog.setMessage("Please wait for a moment");
         txt_back.setOnClickListener(new View.OnClickListener() {
             @Override
Index: app/src/main/res/layout/fragment_home2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    tools:context=\"in.games.rosegame.Fragments.HomeFragment\">\r\n\r\n    <ScrollView\r\n        android:layout_below=\"@+id/appbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n\r\n        android:fillViewport=\"true\">\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/appbar\"\r\n            android:orientation=\"vertical\"\r\n\r\n\r\n            >\r\n            <androidx.cardview.widget.CardView\r\n                android:id=\"@+id/card_home\"\r\n                app:cardCornerRadius=\"18dp\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:layout_marginLeft=\"10dp\"\r\n                android:layout_marginRight=\"10dp\"\r\n                android:padding=\"5dp\"\r\n\r\n                android:background=\"@color/homebg\"\r\n                android:elevation=\"16dp\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:orientation=\"vertical\"\r\n                    android:padding=\"5dp\"\r\n                    >\r\n\r\n                    <TextView\r\n\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center\"\r\n                        android:paddingLeft=\"5dp\"\r\n                        android:paddingRight=\"10dp\"\r\n                        android:text=\"Welcome to : KING STARLINE\"\r\n                        android:textAlignment=\"center\"\r\n                        android:textColor=\"@color/colorPrimaryDark\"\r\n                        android:textSize=\"18dp\"\r\n                        android:textStyle=\"italic|bold\"\r\n\r\n                        android:visibility=\"gone\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/game_name\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center\"\r\n                        android:paddingLeft=\"5dp\"\r\n                        android:paddingRight=\"10dp\"\r\n                        android:text=\"Welcome to : KING STARLINE\"\r\n                        android:textAlignment=\"center\"\r\n                        android:textColor=\"@color/colorPrimaryDark\"\r\n                        android:textSize=\"16dp\"\r\n                        android:textStyle=\"italic|bold\"\r\n\r\n                        android:visibility=\"gone\" />\r\n\r\n                    <com.daimajia.slider.library.SliderLayout\r\n                        android:id=\"@+id/home_slider\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:visibility=\"gone\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_admin\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:paddingLeft=\"6dp\"\r\n                        android:textAlignment=\"center\"\r\n                        android:layout_marginTop=\"7dp\"\r\n                        android:text=\"Admin: \"\r\n                        android:textColor=\"@color/colorPrimaryDark\"\r\n                        android:textSize=\"20dp\" />\r\n\r\n                    <RelativeLayout\r\n                        android:id=\"@+id/rl_whatsapp\"\r\n                        android:layout_margin=\"10dp\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"40dp\">\r\n\r\n                        <RelativeLayout\r\n                            android:id=\"@+id/rl_whats\"\r\n                            android:layout_centerInParent=\"true\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:background=\"@drawable/shape3\"\r\n                            android:backgroundTint=\"#4CAF50\"\r\n                            android:layout_height=\"wrap_content\">\r\n                            <RelativeLayout\r\n                                android:id=\"@+id/rl_round\"\r\n                                android:layout_width=\"40dp\"\r\n                                android:layout_height=\"40dp\"\r\n                                >\r\n\r\n                                <ImageView\r\n                                    android:id=\"@+id/iv_whts\"\r\n                                    android:src=\"@drawable/icons8_whatsapp_48px_1\"\r\n                                    android:layout_width=\"30dp\"\r\n                                    android:padding=\"2dp\"\r\n                                    android:layout_centerInParent=\"true\"\r\n                                    android:layout_height=\"30dp\"/>\r\n                            </RelativeLayout>\r\n                            <TextView\r\n                                android:layout_width=\"wrap_content\"\r\n                                android:layout_height=\"30dp\"\r\n                                android:id=\"@+id/tv_number\"\r\n                                android:layout_centerInParent=\"true\"\r\n                                android:layout_marginTop=\"2dp\"\r\n                                android:paddingRight=\"@dimen/_10sdp\"\r\n                                android:layout_toRightOf=\"@id/rl_round\"\r\n                                android:text=\"WhatsApp No\"\r\n                                android:textSize=\"20dp\"\r\n                                android:paddingLeft=\"@dimen/_10sdp\"\r\n                                android:textColor=\"@color/white\"\r\n                                android:layout_centerHorizontal=\"true\"\r\n                                android:textAlignment=\"center\"\r\n                                android:fontFamily=\"sans-serif-black\"/>\r\n                        </RelativeLayout>\r\n\r\n                    </RelativeLayout>\r\n\r\n\r\n                </LinearLayout>\r\n\r\n\r\n            </androidx.cardview.widget.CardView>\r\n\r\n            <androidx.cardview.widget.CardView\r\n                android:id=\"@+id/cardView1\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:layout_marginLeft=\"10dp\"\r\n                android:layout_marginRight=\"10dp\"\r\n                app:cardCornerRadius=\"@dimen/_20sdp\"\r\n                android:visibility=\"gone\"\r\n                android:background=\"@color/homebg\"\r\n                android:elevation=\"16dp\">\r\n\r\n                <RelativeLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:gravity=\"center\"\r\n                    android:layout_margin=\"@dimen/_10sdp\"\r\n                    android:layout_height=\"match_parent\">\r\n                    <TextView\r\n                        android:id=\"@+id/tagline\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center\"\r\n                        android:textColor=\"@color/colorPrimaryDark\"\r\n                        android:layout_centerInParent=\"true\"\r\n                        android:paddingLeft=\"5dp\"\r\n                        android:paddingRight=\"10dp\"\r\n                        android:text=\"\"\r\n                        android:textSize=\"18dp\"\r\n                        android:layout_centerVertical=\"true\"\r\n                        android:textStyle=\"italic|bold\"/>\r\n                </RelativeLayout>\r\n\r\n\r\n            </androidx.cardview.widget.CardView>\r\n\r\n            <androidx.cardview.widget.CardView\r\n                android:id=\"@+id/card_starline\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"10dp\"\r\n                android:layout_marginLeft=\"10dp\"\r\n                android:layout_marginRight=\"10dp\"\r\n\r\n\r\n\r\n                android:elevation=\"16dp\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:gravity=\"center\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:weightSum=\"5\"\r\n\r\n                    android:background=\"@drawable/gradients_background\"\r\n                    android:layout_height=\"match_parent\">\r\n                    <TextView\r\n\r\n\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_weight=\"4\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center\"\r\n                        android:textColor=\"@color/white\"\r\n                        android:textAlignment=\"center\"\r\n\r\n                        android:text=\"Play Starline Game\"\r\n                        android:textAllCaps=\"true\"\r\n                        android:textSize=\"20dp\"\r\n\r\n                        android:textStyle=\"italic|bold\"/>\r\n                    <ImageView\r\n                        android:id=\"@+id/starline_banner\"\r\n                        android:layout_width=\"0dp\"\r\n                        android:layout_weight=\"1\"\r\n                        android:layout_height=\"40dp\"\r\n                        android:src=\"@drawable/play_image\"\r\n\r\n                     />\r\n                </LinearLayout>\r\n\r\n\r\n            </androidx.cardview.widget.CardView>\r\n\r\n\r\n\r\n\r\n\r\n            <RelativeLayout\r\n\r\n                android:id=\"@+id/swipe_layout\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"5dp\"\r\n                android:layout_marginRight=\"5dp\"\r\n                android:layout_marginTop=\"10dp\"\r\n                app:layout_behavior=\"@string/appbar_scrolling_view_behavior\">\r\n                <androidx.recyclerview.widget.RecyclerView\r\n                    android:id=\"@+id/listView\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:smoothScrollbar=\"true\"\r\n                    android:nestedScrollingEnabled=\"false\"\r\n                    android:splitMotionEvents=\"true\"/>\r\n            </RelativeLayout>\r\n\r\n            <!--        </RelativeLayout>-->\r\n        </LinearLayout>\r\n\r\n    </ScrollView>\r\n</FrameLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_home2.xml	(revision 44e209894906bad2c634047aa799280748a83d6d)
+++ app/src/main/res/layout/fragment_home2.xml	(date 1611120032337)
@@ -107,11 +107,11 @@
 
                                 <ImageView
                                     android:id="@+id/iv_whts"
-                                    android:src="@drawable/icons8_whatsapp_48px_1"
                                     android:layout_width="30dp"
+                                    android:layout_height="30dp"
+                                    android:layout_centerVertical="true"
                                     android:padding="2dp"
-                                    android:layout_centerInParent="true"
-                                    android:layout_height="30dp"/>
+                                    android:src="@drawable/icons8_whatsapp_48px_1" />
                             </RelativeLayout>
                             <TextView
                                 android:layout_width="wrap_content"
Index: app/src/main/java/in/games/rosegame/Adapter/PointsAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package in.games.rosegame.Adapter;\r\n\r\nimport android.app.Activity;\r\n\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport in.games.rosegame.Common.Common;\r\nimport in.games.rosegame.Model.TableModel;\r\nimport in.games.rosegame.R;\r\n\r\nimport static in.games.rosegame.Fragments.PanaFragment.bet_list;\r\nimport static in.games.rosegame.Fragments.PanaFragment.total;\r\nimport static in.games.rosegame.Fragments.PanaFragment.txt_type;\r\n\r\npublic class PointsAdapter extends RecyclerView.Adapter<PointsAdapter.ViewHolder> {\r\n\r\n  public static  ArrayList<TableModel> b_list ;\r\n List<String> digit_list ;\r\n    Activity activity;\r\npublic static ArrayList<String> ponitsList;\r\nCommon common;\r\n\r\n    int tot = 0;\r\n    int index =0 ;\r\n    String beforeTextChangeValue=\"\";\r\n\r\n\r\npublic static Boolean is_empty = true , is_error = false ;\r\n\r\n    public PointsAdapter(List<String> digit_list, Activity activity) {\r\n        this.digit_list = digit_list;\r\n        this.activity = activity;\r\n\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {\r\n        View view = LayoutInflater.from(activity).inflate(R.layout.layout_new_digits,null);\r\n        ViewHolder holder = new ViewHolder(view);\r\n        return holder;\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull final ViewHolder viewHolder, final int i) {\r\n        viewHolder.txt_digits.setText(digit_list.get(i));\r\n        bet_list.clear();\r\n        for(int j=0; j<digit_list.size();j++)\r\n        {\r\n            ponitsList.add(\"0\");\r\n            bet_list.add(new TableModel(digit_list.get(j).toString(),\"0\",txt_type.getText().toString()));\r\n        }\r\n\r\n        viewHolder.et_points.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n               beforeTextChangeValue=s.toString();\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n                if (txt_type.getText().toString().equalsIgnoreCase(activity.getResources().getString(R.string.select_type))) {\r\n                       common.showToast(\"Select Bid Type\");\r\n                } else {\r\n                    boolean backSpace = false;\r\n                    if (beforeTextChangeValue.length() > s.toString().length()) {\r\n                        backSpace = true;\r\n                    }\r\n\r\n                    if (backSpace) {\r\n                        String pnts = s.toString();\r\n                        deleteFromList(pnts, i, beforeTextChangeValue);\r\n                    } else {\r\n                        String points = s.toString();\r\n                        addToBetList(points, i);\r\n                    }\r\n\r\n\r\n                }\r\n            }\r\n\r\n        });\r\n//\r\n\r\n    }\r\n\r\n    private void deleteFromList(String pnts,int pos,String beforeTextChangeValue) {\r\n        if(!pnts.isEmpty())\r\n        {\r\n            if(tot!=0)\r\n            {\r\n                int tx= Integer.parseInt(pnts);\r\n                int beforeValue=Integer.parseInt(beforeTextChangeValue);\r\n                Log.e(\"beforeValue\",\"\"+beforeTextChangeValue+\" - Next Value - \" + tx);\r\n                Log.e(\"leeeeeee\",\"\"+pnts.length());\r\n\r\n                if(pnts.length()==1)\r\n                {\r\n                    tot = (tot)-beforeValue;\r\n                }\r\n                else if(pnts.length()==2)\r\n                {\r\n                    tot = (tot+tx)-beforeValue;\r\n                }\r\n                else if(pnts.length() == 3)\r\n                {\r\n                    tot = (tot+tx)-beforeValue;\r\n                }\r\n                else if(pnts.length()==4)\r\n                {\r\n\r\n                    tot = (tot+tx)-beforeValue;\r\n                }\r\n                else if(pnts.length()==5)\r\n                {\r\n\r\n                    tot = (tot+tx)-beforeValue;\r\n                }\r\n\r\n                total.setText(String.valueOf(tot));\r\n                ponitsList.set(pos,\"0\");\r\n                if (txt_type.getText().toString().equals(activity.getResources().getString(R.string.select_type)))\r\n                {\r\n//                                    Toast.makeText(activity, \"Select game type\", Toast.LENGTH_LONG).show();\r\n                }\r\n                else {\r\n                    if(pnts.length()>1)\r\n                    {\r\n                        common.updatePoints(bet_list,pos,pnts,txt_type.getText().toString());\r\n                    }else\r\n                    {\r\n                        common.updatePoints(bet_list,pos,\"0\",txt_type.getText().toString());\r\n                    }\r\n\r\n//\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private void addToBetList(String points,int pos) {\r\n        int p =0;\r\n        if(!points.isEmpty())\r\n        {\r\n            p = Integer.parseInt(points);\r\n\r\n        }\r\n\r\n        if (points.length() != 0) {\r\n\r\n            if (points.isEmpty()) {\r\n                is_empty = true;\r\n            } else {\r\n                is_empty = false;\r\n                int pints = Integer.parseInt(points);\r\n                if ( pints < 10) {\r\n                    if(tot==0)\r\n                    {\r\n                        is_error = true;\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    int ps = Integer.parseInt(points);\r\n                    if(points.length()==2)\r\n                    {\r\n                        Log.e(\"digits2\",\"\"+points);\r\n                        tot = tot + ps;\r\n                    }\r\n                    else if(points.length() == 3)\r\n                    {\r\n                        tot = (tot + ps)-Integer.parseInt(bet_list.get(pos).getPoints());\r\n                        Log.e(\"digits3\",\"\"+points);\r\n                    }\r\n                    else if(points.length()==4)\r\n                    {\r\n                        tot = (tot + ps)-Integer.parseInt(bet_list.get(pos).getPoints());\r\n\r\n                        Log.e(\"digits4\",\"\"+points);\r\n                    }\r\n                    else if(points.length()==5)\r\n                    {\r\n                        tot = (tot + ps)-Integer.parseInt(bet_list.get(pos).getPoints());\r\n\r\n                        Log.e(\"digits4\",\"\"+points);\r\n                    }\r\n\r\n                    is_empty = false;\r\n                    is_error = false;\r\n                    ponitsList.set(pos,String.valueOf(ps));\r\n                    total.setText(String.valueOf(tot));\r\n                    if (txt_type.getText().toString().equals(activity.getResources().getString(R.string.select_type)))\r\n                    {\r\n//                                    Toast.makeText(activity, \"Select game type\", Toast.LENGTH_LONG).show();\r\n                    }\r\n                    else {\r\n                        common.updatePoints(bet_list,pos,points,txt_type.getText().toString());\r\n//                                    bet_list.add(new TableModel(digit_list.get(i), points, txt_type.getText().toString()));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return digit_list.size();\r\n    }\r\n\r\n\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder {\r\n        TextView txt_digits ;\r\n        EditText et_points;\r\n        public ViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            ponitsList=new ArrayList<>();\r\n            txt_digits = itemView.findViewById(R.id.txt_digit);\r\n            et_points = itemView.findViewById(R.id.et_points);\r\n            b_list = new ArrayList<>();\r\n            common=new Common(activity);\r\n\r\n        }\r\n    }\r\n\r\n    public static ArrayList<String> getPonitsList()\r\n    {\r\n        return ponitsList;\r\n    }\r\n    public static ArrayList<TableModel> getBetlist()\r\n    {\r\n        return b_list;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/in/games/rosegame/Adapter/PointsAdapter.java	(revision 44e209894906bad2c634047aa799280748a83d6d)
+++ app/src/main/java/in/games/rosegame/Adapter/PointsAdapter.java	(date 1611553699100)
@@ -10,6 +10,7 @@
 import android.view.ViewGroup;
 import android.widget.EditText;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.recyclerview.widget.RecyclerView;
@@ -212,7 +213,7 @@
                     total.setText(String.valueOf(tot));
                     if (txt_type.getText().toString().equals(activity.getResources().getString(R.string.select_type)))
                     {
-//                                    Toast.makeText(activity, "Select game type", Toast.LENGTH_LONG).show();
+                                    Toast.makeText(activity, "Select game type", Toast.LENGTH_LONG).show();
                     }
                     else {
                         common.updatePoints(bet_list,pos,points,txt_type.getText().toString());
Index: app/src/main/java/in/games/rosegame/Fragments/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package in.games.rosegame.Fragments;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.Dialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageInfo;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.text.Html;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.KeyEvent;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.JsonArrayRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.bumptech.glide.Glide;\r\nimport com.daimajia.slider.library.SliderLayout;\r\nimport com.daimajia.slider.library.SliderTypes.BaseSliderView;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\n\r\nimport in.games.rosegame.Activity.MainActivity;\r\nimport in.games.rosegame.Adapter.MatkaAdapter;\r\nimport in.games.rosegame.AppController;\r\nimport in.games.rosegame.Common.Common;\r\nimport in.games.rosegame.Config.BaseUrls;\r\nimport in.games.rosegame.CustomSlider;\r\nimport in.games.rosegame.Fragments.starline.StarlineFragment;\r\nimport in.games.rosegame.Intefaces.GetAppSettingData;\r\nimport in.games.rosegame.Model.AppSettingModel;\r\nimport in.games.rosegame.Model.MatkasObjects;\r\nimport in.games.rosegame.R;\r\nimport in.games.rosegame.Util.ConnectivityReceiver;\r\nimport in.games.rosegame.Util.CustomJsonRequest;\r\nimport in.games.rosegame.Util.LoadingBar;\r\nimport in.games.rosegame.Util.Module;\r\nimport in.games.rosegame.Util.Session_management;\r\nimport in.games.rosegame.networkconnectivity.NoInternetConnection;\r\n\r\nimport static in.games.rosegame.Activity.splash_activity.app_link;\r\nimport static in.games.rosegame.Activity.splash_activity.dialog_image;\r\nimport static in.games.rosegame.Activity.splash_activity.ver_code;\r\n\r\n\r\nimport static in.games.rosegame.Config.BaseUrls.URL_Matka;\r\n\r\npublic class HomeFragment extends Fragment implements View.OnClickListener {\r\n\r\n    TextView tv_admin,tv_number ,text_number;\r\n\r\n    public final String TAG=HomeFragment.class.getSimpleName();\r\nMatkaAdapter matkaAdapter ;\r\nprivate ArrayList<MatkasObjects> matkaList;\r\n    private RecyclerView rv_matka;\r\n    LoadingBar progressDialog;\r\n    Common common;\r\n    Session_management session_management;\r\n    Module module;\r\n    public static String mainName=\"\";\r\n    int flag =0 ;\r\n    float version_code ;\r\n    SliderLayout home_slider ;\r\n    CardView card_starline,card_home;\r\n    String wNo,wMsg;\r\n    RelativeLayout rl_whatsapp;\r\n    public HomeFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n       View view = inflater.inflate(R.layout.fragment_home2, container, false);\r\n       initViews(view);\r\n\r\n       view.setFocusableInTouchMode(true);\r\n       view.requestFocus();\r\n       view.setOnKeyListener(new View.OnKeyListener() {\r\n           @Override\r\n           public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n               if (event.getAction() == KeyEvent.ACTION_UP && keyCode == KeyEvent.KEYCODE_BACK) {\r\n                   AlertDialog.Builder builder=new AlertDialog.Builder(getActivity());\r\n                   builder.setTitle(\"Confirmation\");\r\n                   builder.setMessage(\"Are you sure want to exit?\");\r\n                   builder.setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\r\n                       @Override\r\n                       public void onClick(DialogInterface dialogInterface, int i) {\r\n                           dialogInterface.dismiss();\r\n                           //((MainActivity) getActivity()).finish();\r\n                           getActivity().finishAffinity();\r\n\r\n\r\n                       }\r\n                   })\r\n                           .setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                               @Override\r\n                               public void onClick(DialogInterface dialogInterface, int i) {\r\n                                   dialogInterface.dismiss();\r\n                               }\r\n                           });\r\n                   final AlertDialog dialog=builder.create();\r\n                   dialog.setOnShowListener( new DialogInterface.OnShowListener() {\r\n                       @Override\r\n                       public void onShow(DialogInterface arg0) {\r\n                           dialog.getButton(AlertDialog.BUTTON_NEGATIVE).setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                           dialog.getButton(AlertDialog.BUTTON_POSITIVE).setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                       }\r\n                   });\r\n                   dialog.show();\r\n                   return true;\r\n               }\r\n               return false;\r\n           }\r\n       });\r\n\r\n\r\n//       rv_matka.addOnItemTouchListener(new RecyclerTouchListener(getActivity(), rv_matka, new RecyclerTouchListener.OnItemClickListener() {\r\n//           @Override\r\n//           public void onItemClick(View view, int position) {\r\n//               MatkasObjects objects = matkaList.get(position);\r\n//               Bundle bundle = new Bundle();\r\n//\r\n//               bundle.putString(\"matka_name\",objects.getName());\r\n//               bundle.putString(\"m_id\",objects.getId());\r\n//               bundle.putString(\"start_number\",objects.getStarting_num());\r\n//               bundle.putString(\"number\",objects.getNumber());\r\n//               bundle.putString(\"end_number\",objects.getEnd_num());\r\n//               bundle.putString(\"end_time\",objects.getBid_end_time());\r\n//               bundle.putString(\"start_time\",objects.getBid_start_time());\r\n//               Fragment fm  = new MainFragment();\r\n//               fm.setArguments(bundle);\r\n//               FragmentManager fragmentManager = getActivity().getSupportFragmentManager();\r\n//               fragmentManager.beginTransaction().replace(R.id.contentPanel, fm)\r\n//                       .addToBackStack(null).commit();\r\n//\r\n//           }\r\n//\r\n//           @Override\r\n//           public void onLongItemClick(View view, int position) {\r\n//\r\n//           }\r\n//       }));\r\n       return  view;\r\n    }\r\n\r\n   private void initViews(View v)\r\n   {\r\n       text_number=(TextView)v.findViewById (R.id.number);\r\n\r\n       tv_number=v.findViewById (R.id.tv_number);\r\n       rl_whatsapp=v.findViewById (R.id.rl_whatsapp);\r\n       rl_whatsapp.setOnClickListener(this);\r\n\r\n\r\n       matkaList = new ArrayList<>();\r\n    session_management=new Session_management(getActivity());\r\n       ((MainActivity) getActivity()).setTitle(getActivity().getResources().getString(R.string.app_name));\r\n    rv_matka= v.findViewById(R.id.listView);\r\n    home_slider= v.findViewById(R.id.home_slider);\r\n       card_home= v.findViewById(R.id.card_home);\r\n    progressDialog = new LoadingBar(getActivity());\r\n    common = new Common(getActivity());\r\n    module = new Module();\r\n    card_starline = v.findViewById(R.id.card_starline);\r\n\r\n       tv_admin=v.findViewById (R.id.tv_admin);\r\n    card_starline.setOnClickListener(this);\r\n\r\n   }\r\n\r\n\r\n\r\n    public void getMatkaData()\r\n    {\r\n        progressDialog.show();\r\n\r\n        final JsonArrayRequest jsonArrayRequest=new JsonArrayRequest(URL_Matka, new\r\n                Response.Listener<JSONArray>() {\r\n                    @Override\r\n                    public void onResponse(JSONArray response) {\r\n                        matkaList.clear();\r\n                        for(int i=0; i<response.length();i++)\r\n                        {\r\n                            try\r\n                            {\r\n                                JSONObject jsonObject=response.getJSONObject(i);\r\n                                MatkasObjects matkasObjects=new MatkasObjects();\r\n                                matkasObjects.setId(jsonObject.getString(\"id\"));\r\n                                matkasObjects.setName(jsonObject.getString(\"name\"));\r\n                                matkasObjects.setStart_time(jsonObject.getString(\"start_time\"));\r\n                                matkasObjects.setEnd_time(jsonObject.getString(\"end_time\"));\r\n                                matkasObjects.setStarting_num(jsonObject.getString(\"starting_num\"));\r\n                                matkasObjects.setNumber(jsonObject.getString(\"number\"));\r\n                                matkasObjects.setEnd_num(jsonObject.getString(\"end_num\"));\r\n                                matkasObjects.setBid_start_time(jsonObject.getString(\"bid_start_time\"));\r\n                                matkasObjects.setBid_end_time(jsonObject.getString(\"bid_end_time\"));\r\n                                matkasObjects.setCreated_at(jsonObject.getString(\"created_at\"));\r\n                                matkasObjects.setUpdated_at(jsonObject.getString(\"updated_at\"));\r\n                                matkasObjects.setSat_start_time(jsonObject.getString(\"sat_start_time\"));\r\n                                matkasObjects.setSat_end_time(jsonObject.getString(\"sat_end_time\"));\r\n                                matkasObjects.setStatus(jsonObject.getString(\"status\"));\r\n                                matkasObjects.setLoader(jsonObject.getString(\"loader\"));\r\n                                matkasObjects.setText(jsonObject.getString(\"text\"));\r\n                                matkasObjects.setText_status(jsonObject.getString(\"text_status\"));\r\n                                matkaList.add(matkasObjects);\r\n                                matkaAdapter.notifyDataSetChanged();\r\n\r\n\r\n                            }\r\n                            catch (Exception ex)\r\n                            {\r\n                                progressDialog.dismiss();\r\n                                Toast.makeText(getActivity(),\"Error :\"+ex.getMessage(),Toast.LENGTH_LONG).show();\r\n\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        progressDialog.dismiss();\r\n\r\n\r\n                    }\r\n\r\n                },\r\n\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        progressDialog.dismiss();\r\n                        String msg=common.VolleyErrorMessage(error);\r\n                        if(!msg.isEmpty())\r\n                        {\r\n                            common.showToast(\"\"+msg);\r\n                        }\r\n                    }\r\n                });\r\n        RequestQueue requestQueue= Volley.newRequestQueue(getActivity());\r\n        requestQueue.add(jsonArrayRequest);\r\n\r\n\r\n\r\n    }\r\n\r\n    private void makeSliderRequest() {\r\n    HashMap<String,String> params = new HashMap<>();\r\n\r\n      CustomJsonRequest req = new CustomJsonRequest(Request.Method.POST, BaseUrls.URL_SLIDERS,params,\r\n                new Response.Listener<JSONObject>() {\r\n                    @Override\r\n                    public void onResponse(JSONObject response) {\r\n                        Log.e(\"slider\", response.toString());\r\n                        try {\r\n                            String status = response.getString(\"status\");\r\n                            if (status.equals(\"success\"))\r\n                            {\r\n                                JSONArray arr=response.getJSONArray(\"data\");\r\n                                ArrayList<HashMap<String, String>> listarray = new ArrayList<>();\r\n\r\n                                for(int i=0; i<arr.length();i++)\r\n                                {\r\n                                    JSONObject object =arr.getJSONObject(0);\r\n                                    HashMap<String, String> url_maps = new HashMap<String, String>();\r\n                                    url_maps.put(\"id\", object.getString(\"id\"));\r\n                                    url_maps.put(\"title\", object.getString(\"title\"));\r\n                                   // url_maps.put(\"image\", BaseUrls.IMG_SLIDER_URL + object.getString(\"image\"));\r\n                                    url_maps.put(\"description\",object.getString(\"description\"));\r\n                                    listarray.add(url_maps);\r\n\r\n\r\n                                }\r\n                                for (final HashMap<String, String> name : listarray) {\r\n                                    CustomSlider textSliderView = new CustomSlider(getActivity());\r\n                                    textSliderView.description(name.get(\"\")).image(name.get(\"image\")).setScaleType( BaseSliderView.ScaleType.Fit);\r\n                                    textSliderView.bundle(new Bundle());\r\n                                    textSliderView.getBundle().putString(\"extra\", name.get(\"title\"));\r\n                                    textSliderView.getBundle().putString(\"extra\", name.get(\"sub_cat\"));\r\n                                    home_slider.addSlider(textSliderView);\r\n\r\n\r\n\r\n                                }\r\n\r\n                            }\r\n\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                            Toast.makeText(getActivity(),\r\n                                    \"Error: \" + e.getMessage(),\r\n                                    Toast.LENGTH_LONG).show();\r\n                        }\r\n                    }\r\n                }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n\r\n                    Toast.makeText(getActivity(),\"\"+error.getMessage(),Toast.LENGTH_LONG).show();\r\n\r\n            }\r\n        });\r\n        AppController.getInstance().addToRequestQueue(req);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n\r\n        if(ConnectivityReceiver.isConnected()) {\r\n            common.appSettingData(new GetAppSettingData() {\r\n                @Override\r\n                public void getAppSettingData(AppSettingModel model) {\r\n\r\n                    tv_admin.setText(Html.fromHtml(model.getHome_text ()));\r\n                    if(common.checkNullString(model.getWhatsapp_no()) && common.checkNullString(model.getHome_text())){\r\n                        if(card_home.getVisibility()==View.VISIBLE)\r\n                            card_home.setVisibility(View.GONE);\r\n                    }else{\r\n                        if(card_home.getVisibility()==View.GONE)\r\n                            card_home.setVisibility(View.VISIBLE);\r\n\r\n                        if(common.checkNullString(model.getHome_text())){\r\n                            tv_admin.setVisibility(View.GONE);\r\n                        }else{\r\n                            tv_admin.setVisibility(View.VISIBLE);\r\n                            tv_admin.setText(Html.fromHtml(common.checkNull(model.getHome_text())));\r\n                        }\r\n\r\n                        if(common.checkNullString(model.getWhatsapp_no())){\r\n                            rl_whatsapp.setVisibility(View.GONE);\r\n                        }else{\r\n                            rl_whatsapp.setVisibility(View.VISIBLE);\r\n                            wMsg=model.getWhatsapp_msg();\r\n                            wNo=model.getWhatsapp_no();\r\n                        }\r\n\r\n\r\n                    }\r\n//                text_number.setText (Html.fromHtml (model.getWhatsapp_no ()));\r\n\r\n                    if(model.getStarline_status().equals(\"0\")){\r\n                        card_starline.setVisibility(View.GONE);\r\n                    }else{\r\n                        card_starline.setVisibility(View.VISIBLE);\r\n                    }\r\n                }\r\n            });\r\n\r\n            //makeSliderRequest();\r\n            getMatkaData();\r\n            common.getWalletAmount();\r\n//            Log.e(TAG,\"\"+session_management.getUserDetails().get(KEY_WALLET));\r\n//        showUpdateDialog();\r\n//        if (!dialog_image.isEmpty())\r\n//        {\r\n//            if(!session_management.isDialogStatus())\r\n//            {\r\n//                showImageDialog(dialog_image);\r\n//                session_management.updateDilogStatus(true);\r\n//            }\r\n//\r\n//        }\r\n\r\n        } else\r\n        {\r\n            Intent intent = new Intent(getActivity(), NoInternetConnection.class);\r\n            startActivity(intent);\r\n        }\r\n\r\n        rv_matka.setLayoutManager(new LinearLayoutManager(getActivity()));\r\n        matkaAdapter = new MatkaAdapter(getActivity(),matkaList);\r\n        rv_matka.setAdapter(matkaAdapter);\r\n        try {\r\n            PackageInfo pInfo = getActivity().getPackageManager().getPackageInfo(getActivity().getPackageName(), 0);\r\n            version_code = pInfo.versionCode;\r\n            Log.e(TAG,\"\"+ver_code+\" - \"+version_code);\r\n            // Toast.makeText(splash_activity.this,\"\"+version,Toast.LENGTH_LONG).show();\r\n            if(version_code==ver_code)\r\n            {\r\n\r\n            }\r\n            else {\r\n                showUpdateDialog();\r\n            }\r\n\r\n        } catch (PackageManager.NameNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n//        ((MainActivity)getActivity()).setWalletCounter(session_management.getUserDetails().get(Constants.KEY_WALLET));\r\n\r\n    }\r\n\r\n    void showUpdateDialog()\r\n    {\r\n        final Dialog dialog=new Dialog(getActivity());\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.setContentView(R.layout.dialog_version);\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(0));\r\n        Window window = dialog.getWindow();\r\n        WindowManager.LayoutParams wlp = window.getAttributes();\r\n        wlp.gravity = Gravity.BOTTOM;\r\n        wlp.width= WindowManager.LayoutParams.MATCH_PARENT;\r\n        wlp.flags &= ~WindowManager.LayoutParams.FLAG_DIM_BEHIND;\r\n        window.setAttributes(wlp);\r\n        dialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation;\r\n       Button btnCancel = dialog.findViewById(R.id.cancel);\r\n       Button btnUpdate = dialog.findViewById(R.id.update);\r\n       btnCancel.setOnClickListener(new View.OnClickListener() {\r\n           @Override\r\n           public void onClick(View v) {\r\n               dialog.dismiss();\r\n               getActivity().finishAffinity();\r\n\r\n           }\r\n       });\r\n       btnUpdate.setOnClickListener(new View.OnClickListener() {\r\n           @Override\r\n           public void onClick(View v) {\r\n               String url = null;\r\nif (app_link==null || app_link.isEmpty())\r\n{\r\n    url =\"https://play.google.com/store?hl=en_IN\";\r\n}\r\nelse\r\n{\r\n    url = app_link;\r\n}\r\n               Log.e(\"äsdsd\",\"\"+url);\r\n               Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                                intent.setData(Uri.parse(url));\r\n                                startActivity(intent);\r\n           }\r\n       });\r\n        dialog.show();\r\n    }\r\n\r\n    public void showImageDialog(String img)\r\n    {\r\n\r\n        final Dialog dialog=new Dialog(getActivity());\r\n        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\r\n        dialog.setContentView(R.layout.dialog_image);\r\n        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(0));\r\n        ImageView imageView=dialog.findViewById(R.id.dialog_img);\r\n        ImageView img_close=dialog.findViewById(R.id.img_close);\r\n        dialog.setCanceledOnTouchOutside(false);\r\n        if(dialog.isShowing())\r\n        {\r\n            dialog.dismiss();\r\n        }\r\n        dialog.show();\r\n\r\n        Glide.with(getActivity()).load(BaseUrls.IMG_DIALOG_URL+dialog_image).asBitmap().into(imageView);\r\n\r\n        img_close.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        if (v.getId()==R.id.card_starline)\r\n        {\r\n            Fragment fm  = new StarlineFragment();\r\n\r\n               FragmentManager fragmentManager = getActivity().getSupportFragmentManager();\r\n               fragmentManager.beginTransaction().replace(R.id.contentPanel, fm)\r\n                       .addToBackStack(null).commit();\r\n        }\r\n        else if(v.getId() == R.id.rl_whatsapp){\r\n            common.whatsapp(wNo,wMsg);\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/in/games/rosegame/Fragments/HomeFragment.java	(revision 44e209894906bad2c634047aa799280748a83d6d)
+++ app/src/main/java/in/games/rosegame/Fragments/HomeFragment.java	(date 1611851241807)
@@ -176,7 +176,7 @@
 
    private void initViews(View v)
    {
-       text_number=(TextView)v.findViewById (R.id.number);
+       //text_number=(TextView)v.findViewById (R.id.number);
 
        tv_number=v.findViewById (R.id.tv_number);
        rl_whatsapp=v.findViewById (R.id.rl_whatsapp);
